#ifndef FTMSERVICEFWGEN2_H
#define FTMSERVICEFWGEN2_H

/*
 * automatically generated with the command line :
 * /usr/bin/m-servicefwgen -p /home/holger/hx86/master/libdui/libdui/tests/ft_mservicefwgen/com.nokia.FtMServiceFwGen2
 */

#include <QObject>

#include <mservicefwbaseif.h>


/**
 * @brief main documentation for the interface
 * @details main documentation for the interface2
 */
class FtMServiceFwGen2 : public MServiceFwBaseIf
{
Q_OBJECT

public:

    /**
     * @brief documentation for showGridWithCapturedContent() method
     * @details documentation for showGridWithCapturedContent()
     *  method2
     */
    bool showGridWithCapturedContent( int limit );

    /**
     * @brief documentation for showImage(1) method
     * @details documentation for showImage(1) method2
     */
    void showImage( const QString &uri, const QStringList &uriList );

    /**
     * @brief documentation for showImage() method
     * @details documentation for showImage() method2
     */
    bool showImage( const QString &uri, const QString &playlistName, const QString &defaultBackPage );

    /**
     * @brief documentation for showPage() method
     * @details documentation for showPage() method2
     */
    bool showPage( const QString &targetPage, const QString &previousPage );

    /**
     * @brief documentation for showSettings() method
     * @details documentation for showSettings() method2
     */
    bool showSettings(  );

public:
    /*!
     * @brief Constructs a base interface
     * @param preferredService, define the preferred service provider. Leave
     * empty if no preferred provider. In most cases, this should be left
     * empty.
     * @param parent Parent object
     */

    FtMServiceFwGen2( const QString& preferredService = "", QObject* parent = 0 );

    /*!
     * @brief Set the service name
     * @param service Name of the desired service
     */

    void setService(const QString & service);
Q_SIGNALS:

};
#endif

