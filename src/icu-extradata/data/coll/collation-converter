#! /usr/bin/perl -w
########################################################################
# This script reads the Chinese collation table from
# http://unicode.org/cldr/trac/browser/trunk/common/collation/zh.xml
# and write collation tables in ICU format
#
# Author: Mike FABIAN <mike.fabian@basyskom.de>

use strict;
use diagnostics;
use utf8;
use locale;
use POSIX qw(locale_h);
use POSIX qw(strftime);
use Encode 'from_to','encode_utf8','decode_utf8';
use English;
use Getopt::Long;
use File::Path;
use XML::Parser;
use Data::Dumper;
use Unicode::Normalize;

binmode STDIN,  ":utf8";
binmode STDOUT, ":utf8";
binmode STDERR, ":utf8";

#----------------------------------------------------------------------
# global variables:

my $version = "0.20110412";

my $OPT_VERBOSITY;
my $OPT_VERSION;
my $OPT_HELP;
my $OPT_INPUT_FILE;
my $OPT_OUTPUT_FILE;

my @ignoredCollTypes = ("pinyinshort", "strokeshort");

my $libicuCollationOutput = "";
my $currentCollType = "";
my %collTypeCollationOutput = ();
my @strokeBuckets = ();
my @strokeShortBuckets = ();

my %pinyinAnchorsInserted = ();
my %pinyinSearchAnchorsInserted = ();
my $pinyinSearchCount = 0;

my %zhuyinPcLists = ();
my %pinyinZhuyin = (); # filled from %zhuyinPinyin
my %zhuyinPinyin = (
    "ㄚˉ" => "ā",
    "ㄚˊ" => "á",
    "ㄚ˙" => "a",
    "ㄞˉ" => "āi",
    "ㄞˊ" => "ái",
    "ㄞˇ" => "ǎi",
    "ㄞˋ" => "ài",
    "ㄞ˙" => "ai",
    "ㄢˉ" => "ān",
    "ㄢˊ" => "án",
    "ㄢˇ" => "ǎn",
    "ㄢˋ" => "àn",
    "ㄤˉ" => "āng",
    "ㄤˊ" => "áng",
    "ㄤˇ" => "ǎng",
    "ㄤˋ" => "àng",
    "ㄠˉ" => "āo",
    "ㄠˊ" => "áo",
    "ㄠˇ" => "ǎo",
    "ㄠˋ" => "ào",
    "ㄠ˙" => "ao",
    "ㄅㄚˉ" => "bā",
    "ㄅㄚˊ" => "bá",
    "ㄅㄚˇ" => "bǎ",
    "ㄅㄚˋ" => "bà",
    "ㄅㄚ˙" => "ba",
    "ㄅㄞˉ" => "bāi",
    "ㄅㄞˊ" => "bái",
    "ㄅㄞˇ" => "bǎi",
    "ㄅㄞˋ" => "bài",
    "ㄅㄞ˙" => "bai",
    "ㄅㄢˉ" => "bān",
    "ㄅㄢˇ" => "bǎn",
    "ㄅㄢˋ" => "bàn",
    "ㄅㄢ˙" => "ban",
    "ㄅㄤˉ" => "bāng",
    "ㄅㄤˇ" => "bǎng",
    "ㄅㄤˋ" => "bàng",
    "ㄅㄠˉ" => "bāo",
    "ㄅㄠˊ" => "báo",
    "ㄅㄠˇ" => "bǎo",
    "ㄅㄠˋ" => "bào",
    "ㄅㄠ˙" => "bao",
    "ㄅㄟˉ" => "bēi",
    "ㄅㄟˇ" => "běi",
    "ㄅㄟˋ" => "bèi",
    "ㄅㄟ˙" => "bei",
    "ㄅㄣˉ" => "bēn",
    "ㄅㄣˇ" => "běn",
    "ㄅㄣˋ" => "bèn",
    "ㄅㄥˉ" => "bēng",
    "ㄅㄥˊ" => "béng",
    "ㄅㄥˇ" => "běng",
    "ㄅㄥˋ" => "bèng",
    "ㄅㄥ˙" => "beng",
    "ㄅㄧˉ" => "bī",
    "ㄅㄧˊ" => "bí",
    "ㄅㄧˇ" => "bǐ",
    "ㄅㄧˋ" => "bì",
    "ㄅㄧ˙" => "bi",
    "ㄅㄧㄢˉ" => "biān",
    "ㄅㄧㄢˇ" => "biǎn",
    "ㄅㄧㄢˋ" => "biàn",
    "ㄅㄧㄢ˙" => "bian",
    "ㄅㄧㄠˉ" => "biāo",
    "ㄅㄧㄠˇ" => "biǎo",
    "ㄅㄧㄠˋ" => "biào",
    "ㄅㄧㄠ˙" => "biao",
    "ㄅㄧㄝˉ" => "biē",
    "ㄅㄧㄝˊ" => "bié",
    "ㄅㄧㄝˇ" => "biě",
    "ㄅㄧㄝˋ" => "biè",
    "ㄅㄧㄣˉ" => "bīn",
    "ㄅㄧㄣˇ" => "bǐn",
    "ㄅㄧㄣˋ" => "bìn",
    "ㄅㄧㄣ˙" => "bin",
    "ㄅㄧㄥˉ" => "bīng",
    "ㄅㄧㄥˇ" => "bǐng",
    "ㄅㄧㄥˋ" => "bìng",
    "ㄅㄧㄥ˙" => "bing",
    "ㄅㄛˉ" => "bō",
    "ㄅㄛˊ" => "bó",
    "ㄅㄛˇ" => "bǒ",
    "ㄅㄛˋ" => "bò",
    "ㄅㄛ˙" => "bo",
    "ㄅㄨˉ" => "bū",
    "ㄅㄨˊ" => "bú",
    "ㄅㄨˇ" => "bǔ",
    "ㄅㄨˋ" => "bù",
    "ㄅㄨㄣˉ" => "būn",
    "ㄘㄚˉ" => "cā",
    "ㄘㄚˇ" => "cǎ",
    "ㄘㄚˋ" => "cà",
    "ㄘㄞˉ" => "cāi",
    "ㄘㄞˊ" => "cái",
    "ㄘㄞˇ" => "cǎi",
    "ㄘㄞˋ" => "cài",
    "ㄘㄢˉ" => "cān",
    "ㄘㄢˊ" => "cán",
    "ㄘㄢˇ" => "cǎn",
    "ㄘㄢˋ" => "càn",
    "ㄘㄢ˙" => "can",
    "ㄘㄤˉ" => "cāng",
    "ㄘㄤˊ" => "cáng",
    "ㄘㄤˋ" => "càng",
    "ㄘㄤ˙" => "cang",
    "ㄘㄠˉ" => "cāo",
    "ㄘㄠˊ" => "cáo",
    "ㄘㄠˇ" => "cǎo",
    "ㄘㄠˋ" => "cào",
    "ㄘㄠ˙" => "cao",
    "ㄘㄜˋ" => "cè",
    "ㄘㄟˋ" => "cèi",
    "ㄘㄣˉ" => "cēn",
    "ㄘㄣˊ" => "cén",
    "ㄘㄥˉ" => "cēng",
    "ㄘㄥˊ" => "céng",
    "ㄘㄥˋ" => "cèng",
    "ㄔㄚˉ" => "chā",
    "ㄔㄚˊ" => "chá",
    "ㄔㄚˇ" => "chǎ",
    "ㄔㄚˋ" => "chà",
    "ㄔㄞˉ" => "chāi",
    "ㄔㄞˊ" => "chái",
    "ㄔㄞˇ" => "chǎi",
    "ㄔㄞˋ" => "chài",
    "ㄔㄢˉ" => "chān",
    "ㄔㄢˊ" => "chán",
    "ㄔㄢˇ" => "chǎn",
    "ㄔㄢˋ" => "chàn",
    "ㄔㄢ˙" => "chan",
    "ㄔㄤˉ" => "chāng",
    "ㄔㄤˊ" => "cháng",
    "ㄔㄤˇ" => "chǎng",
    "ㄔㄤˋ" => "chàng",
    "ㄔㄤ˙" => "chang",
    "ㄔㄠˉ" => "chāo",
    "ㄔㄠˊ" => "cháo",
    "ㄔㄠˇ" => "chǎo",
    "ㄔㄠˋ" => "chào",
    "ㄔㄜˉ" => "chē",
    "ㄔㄜˊ" => "ché",
    "ㄔㄜˇ" => "chě",
    "ㄔㄜˋ" => "chè",
    "ㄔㄣˉ" => "chēn",
    "ㄔㄣˊ" => "chén",
    "ㄔㄣˇ" => "chěn",
    "ㄔㄣˋ" => "chèn",
    "ㄔㄣ˙" => "chen",
    "ㄔㄥˉ" => "chēng",
    "ㄔㄥˊ" => "chéng",
    "ㄔㄥˇ" => "chěng",
    "ㄔㄥˋ" => "chèng",
    "ㄔㄥ˙" => "cheng",
    "ㄔˉ" => "chī",
    "ㄔˊ" => "chí",
    "ㄔˇ" => "chǐ",
    "ㄔˋ" => "chì",
    "ㄔ˙" => "chi",
    "ㄔㄨㄥˉ" => "chōng",
    "ㄔㄨㄥˊ" => "chóng",
    "ㄔㄨㄥˇ" => "chǒng",
    "ㄔㄨㄥˋ" => "chòng",
    "ㄔㄡˉ" => "chōu",
    "ㄔㄡˊ" => "chóu",
    "ㄔㄡˇ" => "chǒu",
    "ㄔㄡˋ" => "chòu",
    "ㄔㄡ˙" => "chou",
    "ㄔㄨˉ" => "chū",
    "ㄔㄨˊ" => "chú",
    "ㄔㄨˇ" => "chǔ",
    "ㄔㄨˋ" => "chù",
    "ㄔㄨ˙" => "chu",
    "ㄔㄨㄚˉ" => "chuā",
    "ㄔㄨㄚˇ" => "chuǎ",
    "ㄔㄨㄚˋ" => "chuà",
    "ㄔㄨㄞˉ" => "chuāi",
    "ㄔㄨㄞˊ" => "chuái",
    "ㄔㄨㄞˇ" => "chuǎi",
    "ㄔㄨㄞˋ" => "chuài",
    "ㄔㄨㄢˉ" => "chuān",
    "ㄔㄨㄢˊ" => "chuán",
    "ㄔㄨㄢˇ" => "chuǎn",
    "ㄔㄨㄢˋ" => "chuàn",
    "ㄔㄨㄤˉ" => "chuāng",
    "ㄔㄨㄤˊ" => "chuáng",
    "ㄔㄨㄤˇ" => "chuǎng",
    "ㄔㄨㄤˋ" => "chuàng",
    "ㄔㄨㄟˉ" => "chuī",
    "ㄔㄨㄟˊ" => "chuí",
    "ㄔㄨㄟˇ" => "chuǐ",
    "ㄔㄨㄟˋ" => "chuì",
    "ㄔㄨㄣˉ" => "chūn",
    "ㄔㄨㄣˊ" => "chún",
    "ㄔㄨㄣˇ" => "chǔn",
    "ㄔㄨㄣ˙" => "chun",
    "ㄔㄨㄛˉ" => "chuō",
    "ㄔㄨㄛˋ" => "chuò",
    "ㄘˉ" => "cī",
    "ㄘˊ" => "cí",
    "ㄘˇ" => "cǐ",
    "ㄘˋ" => "cì",
    "ㄘㄨㄥˉ" => "cōng",
    "ㄘㄨㄥˊ" => "cóng",
    "ㄘㄨㄥˇ" => "cǒng",
    "ㄘㄨㄥˋ" => "còng",
    "ㄘㄨㄥ˙" => "cong",
    "ㄘㄡˉ" => "cōu",
    "ㄘㄡˊ" => "cóu",
    "ㄘㄡˋ" => "còu",
    "ㄘㄨˉ" => "cū",
    "ㄘㄨˊ" => "cú",
    "ㄘㄨˇ" => "cǔ",
    "ㄘㄨˋ" => "cù",
    "ㄘㄨㄢˉ" => "cuān",
    "ㄘㄨㄢˊ" => "cuán",
    "ㄘㄨㄢˋ" => "cuàn",
    "ㄘㄨㄟˉ" => "cuī",
    "ㄘㄨㄟˇ" => "cuǐ",
    "ㄘㄨㄟˋ" => "cuì",
    "ㄘㄨㄟ˙" => "cui",
    "ㄘㄨㄣˉ" => "cūn",
    "ㄘㄨㄣˊ" => "cún",
    "ㄘㄨㄣˇ" => "cǔn",
    "ㄘㄨㄣˋ" => "cùn",
    "ㄘㄨㄛˉ" => "cuō",
    "ㄘㄨㄛˊ" => "cuó",
    "ㄘㄨㄛˇ" => "cuǒ",
    "ㄘㄨㄛˋ" => "cuò",
    "ㄉㄚˉ" => "dā",
    "ㄉㄚˊ" => "dá",
    "ㄉㄚˇ" => "dǎ",
    "ㄉㄚˋ" => "dà",
    "ㄉㄚ˙" => "da",
    "ㄉㄞˉ" => "dāi",
    "ㄉㄞˇ" => "dǎi",
    "ㄉㄞˋ" => "dài",
    "ㄉㄞ˙" => "dai",
    "ㄉㄢˉ" => "dān",
    "ㄉㄢˇ" => "dǎn",
    "ㄉㄢˋ" => "dàn",
    "ㄉㄢ˙" => "dan",
    "ㄉㄤˉ" => "dāng",
    "ㄉㄤˇ" => "dǎng",
    "ㄉㄤˋ" => "dàng",
    "ㄉㄤ˙" => "dang",
    "ㄉㄠˉ" => "dāo",
    "ㄉㄠˊ" => "dáo",
    "ㄉㄠˇ" => "dǎo",
    "ㄉㄠˋ" => "dào",
    "ㄉㄠ˙" => "dao",
    "ㄉㄜˉ" => "dē",
    "ㄉㄜˊ" => "dé",
    "ㄉㄜ˙" => "de",
    "ㄉㄣˋ" => "dèn",
    "ㄉㄥˉ" => "dēng",
    "ㄉㄥˇ" => "děng",
    "ㄉㄥˋ" => "dèng",
    "ㄉㄥ˙" => "deng",
    "ㄉㄧˉ" => "dī",
    "ㄉㄧˊ" => "dí",
    "ㄉㄧˇ" => "dǐ",
    "ㄉㄧˋ" => "dì",
    "ㄉㄧ˙" => "di",
    "ㄉㄧㄚˇ" => "diǎ",
    "ㄉㄧㄢˉ" => "diān",
    "ㄉㄧㄢˇ" => "diǎn",
    "ㄉㄧㄢˋ" => "diàn",
    "ㄉㄧㄢ˙" => "dian",
    "ㄉㄧㄠˉ" => "diāo",
    "ㄉㄧㄠˇ" => "diǎo",
    "ㄉㄧㄠˋ" => "diào",
    "ㄉㄧㄠ˙" => "diao",
    "ㄉㄧㄝˉ" => "diē",
    "ㄉㄧㄝˊ" => "dié",
    "ㄉㄧㄝˇ" => "diě",
    "ㄉㄧㄝˋ" => "diè",
    "ㄉㄧㄝ˙" => "die",
    "ㄉㄧㄣˋ" => "dìn",
    "ㄉㄧㄥˉ" => "dīng",
    "ㄉㄧㄥˇ" => "dǐng",
    "ㄉㄧㄥˋ" => "dìng",
    "ㄉㄧㄥ˙" => "ding",
    "ㄉㄧㄡˉ" => "diū",
    "ㄉㄨㄥˉ" => "dōng",
    "ㄉㄨㄥˇ" => "dǒng",
    "ㄉㄨㄥˋ" => "dòng",
    "ㄉㄨㄥ˙" => "dong",
    "ㄉㄡˉ" => "dōu",
    "ㄉㄡˇ" => "dǒu",
    "ㄉㄡˋ" => "dòu",
    "ㄉㄡ˙" => "dou",
    "ㄉㄨˉ" => "dū",
    "ㄉㄨˊ" => "dú",
    "ㄉㄨˇ" => "dǔ",
    "ㄉㄨˋ" => "dù",
    "ㄉㄨㄢˉ" => "duān",
    "ㄉㄨㄢˇ" => "duǎn",
    "ㄉㄨㄢˋ" => "duàn",
    "ㄉㄨㄟˉ" => "duī",
    "ㄉㄨㄟˇ" => "duǐ",
    "ㄉㄨㄟˋ" => "duì",
    "ㄉㄨㄣˉ" => "dūn",
    "ㄉㄨㄣˇ" => "dǔn",
    "ㄉㄨㄣˋ" => "dùn",
    "ㄉㄨㄣ˙" => "dun",
    "ㄉㄨㄛˉ" => "duō",
    "ㄉㄨㄛˊ" => "duó",
    "ㄉㄨㄛˇ" => "duǒ",
    "ㄉㄨㄛˋ" => "duò",
    "ㄉㄨㄛ˙" => "duo",
    "ㄜˉ" => "ē",
    "ㄜˊ" => "é",
    "ㄜˇ" => "ě",
    "ㄜˋ" => "è",
    "ㄜ˙" => "e",
    "ㄟˊ" => "éi",
    "ㄣˉ" => "ēn",
    "ㄣˇ" => "ěn",
    "ㄣˋ" => "èn",
    "ㄥˉ" => "ēng",
    "ㄦˊ" => "ér",
    "ㄦˇ" => "ěr",
    "ㄦˋ" => "èr",
    "ㄦ˙" => "er",
    "ㄈㄚˉ" => "fā",
    "ㄈㄚˊ" => "fá",
    "ㄈㄚˇ" => "fǎ",
    "ㄈㄚˋ" => "fà",
    "ㄈㄚ˙" => "fa",
    "ㄈㄢˉ" => "fān",
    "ㄈㄢˊ" => "fán",
    "ㄈㄢˇ" => "fǎn",
    "ㄈㄢˋ" => "fàn",
    "ㄈㄢ˙" => "fan",
    "ㄈㄤˉ" => "fāng",
    "ㄈㄤˊ" => "fáng",
    "ㄈㄤˇ" => "fǎng",
    "ㄈㄤˋ" => "fàng",
    "ㄈㄤ˙" => "fang",
    "ㄈㄟˉ" => "fēi",
    "ㄈㄟˊ" => "féi",
    "ㄈㄟˇ" => "fěi",
    "ㄈㄟˋ" => "fèi",
    "ㄈㄟ˙" => "fei",
    "ㄈㄣˉ" => "fēn",
    "ㄈㄣˊ" => "fén",
    "ㄈㄣˇ" => "fěn",
    "ㄈㄣˋ" => "fèn",
    "ㄈㄣ˙" => "fen",
    "ㄈㄥˉ" => "fēng",
    "ㄈㄥˊ" => "féng",
    "ㄈㄥˇ" => "fěng",
    "ㄈㄥˋ" => "fèng",
    "ㄈㄥ˙" => "feng",
    "ㄈㄧㄠˋ" => "fiào",
    "ㄈㄛˊ" => "fó",
    "ㄈㄛ˙" => "fo",
    "ㄈㄡˉ" => "fōu",
    "ㄈㄡˊ" => "fóu",
    "ㄈㄡˇ" => "fǒu",
    "ㄈㄨˉ" => "fū",
    "ㄈㄨˊ" => "fú",
    "ㄈㄨˇ" => "fǔ",
    "ㄈㄨˋ" => "fù",
    "ㄈㄨ˙" => "fu",
    "ㄍㄚˉ" => "gā",
    "ㄍㄚˊ" => "gá",
    "ㄍㄚˇ" => "gǎ",
    "ㄍㄚˋ" => "gà",
    "ㄍㄞˉ" => "gāi",
    "ㄍㄞˇ" => "gǎi",
    "ㄍㄞˋ" => "gài",
    "ㄍㄢˉ" => "gān",
    "ㄍㄢˇ" => "gǎn",
    "ㄍㄢˋ" => "gàn",
    "ㄍㄤˉ" => "gāng",
    "ㄍㄤˇ" => "gǎng",
    "ㄍㄤˋ" => "gàng",
    "ㄍㄠˉ" => "gāo",
    "ㄍㄠˇ" => "gǎo",
    "ㄍㄠˋ" => "gào",
    "ㄍㄠ˙" => "gao",
    "ㄍㄜˉ" => "gē",
    "ㄍㄜˊ" => "gé",
    "ㄍㄜˇ" => "gě",
    "ㄍㄜˋ" => "gè",
    "ㄍㄜ˙" => "ge",
    "ㄍㄟˇ" => "gěi",
    "ㄍㄣˉ" => "gēn",
    "ㄍㄣˊ" => "gén",
    "ㄍㄣˇ" => "gěn",
    "ㄍㄣˋ" => "gèn",
    "ㄍㄥˉ" => "gēng",
    "ㄍㄥˇ" => "gěng",
    "ㄍㄥˋ" => "gèng",
    "ㄍㄥ˙" => "geng",
    "ㄍㄧ˙" => "gi",
    "ㄍㄨㄥˉ" => "gōng",
    "ㄍㄨㄥˇ" => "gǒng",
    "ㄍㄨㄥˋ" => "gòng",
    "ㄍㄨㄥ˙" => "gong",
    "ㄍㄡˉ" => "gōu",
    "ㄍㄡˇ" => "gǒu",
    "ㄍㄡˋ" => "gòu",
    "ㄍㄨˉ" => "gū",
    "ㄍㄨˊ" => "gú",
    "ㄍㄨˇ" => "gǔ",
    "ㄍㄨˋ" => "gù",
    "ㄍㄨ˙" => "gu",
    "ㄍㄨㄚˉ" => "guā",
    "ㄍㄨㄚˊ" => "guá",
    "ㄍㄨㄚˇ" => "guǎ",
    "ㄍㄨㄚˋ" => "guà",
    "ㄍㄨㄚ˙" => "gua",
    "ㄍㄨㄞˉ" => "guāi",
    "ㄍㄨㄞˇ" => "guǎi",
    "ㄍㄨㄞˋ" => "guài",
    "ㄍㄨㄢˉ" => "guān",
    "ㄍㄨㄢˇ" => "guǎn",
    "ㄍㄨㄢˋ" => "guàn",
    "ㄍㄨㄤˉ" => "guāng",
    "ㄍㄨㄤˇ" => "guǎng",
    "ㄍㄨㄤˋ" => "guàng",
    "ㄍㄨㄤ˙" => "guang",
    "ㄍㄨㄟˉ" => "guī",
    "ㄍㄨㄟˇ" => "guǐ",
    "ㄍㄨㄟˋ" => "guì",
    "ㄍㄨㄟ˙" => "gui",
    "ㄍㄨㄣˇ" => "gǔn",
    "ㄍㄨㄣˋ" => "gùn",
    "ㄍㄨㄛˉ" => "guō",
    "ㄍㄨㄛˊ" => "guó",
    "ㄍㄨㄛˇ" => "guǒ",
    "ㄍㄨㄛˋ" => "guò",
    "ㄍㄨㄛ˙" => "guo",
    "ㄏㄚˉ" => "hā",
    "ㄏㄚˊ" => "há",
    "ㄏㄚˇ" => "hǎ",
    "ㄏㄚ˙" => "ha",
    "ㄏㄞˉ" => "hāi",
    "ㄏㄞˊ" => "hái",
    "ㄏㄞˇ" => "hǎi",
    "ㄏㄞˋ" => "hài",
    "ㄏㄞ˙" => "hai",
    "ㄏㄢˉ" => "hān",
    "ㄏㄢˊ" => "hán",
    "ㄏㄢˇ" => "hǎn",
    "ㄏㄢˋ" => "hàn",
    "ㄏㄢ˙" => "han",
    "ㄏㄤˉ" => "hāng",
    "ㄏㄤˊ" => "háng",
    "ㄏㄤˋ" => "hàng",
    "ㄏㄤ˙" => "hang",
    "ㄏㄠˉ" => "hāo",
    "ㄏㄠˊ" => "háo",
    "ㄏㄠˇ" => "hǎo",
    "ㄏㄠˋ" => "hào",
    "ㄏㄠ˙" => "hao",
    "ㄏㄜˉ" => "hē",
    "ㄏㄜˊ" => "hé",
    "ㄏㄜˋ" => "hè",
    "ㄏㄜ˙" => "he",
    "ㄏㄟˉ" => "hēi",
    "ㄏㄣˊ" => "hén",
    "ㄏㄣˇ" => "hěn",
    "ㄏㄣˋ" => "hèn",
    "ㄏㄥˉ" => "hēng",
    "ㄏㄥˊ" => "héng",
    "ㄏㄥˋ" => "hèng",
    "ㄏㄥ˙" => "heng",
    "ㄏㄇ˙" => "hm", # ?
    "ㄏㄛ˙" => "ho", # ?
    "ㄏㄨㄥˉ" => "hōng",
    "ㄏㄨㄥˊ" => "hóng",
    "ㄏㄨㄥˇ" => "hǒng",
    "ㄏㄨㄥˋ" => "hòng",
    "ㄏㄡˉ" => "hōu",
    "ㄏㄡˊ" => "hóu",
    "ㄏㄡˇ" => "hǒu",
    "ㄏㄡˋ" => "hòu",
    "ㄏㄡ˙" => "hou",
    "ㄏㄨˉ" => "hū",
    "ㄏㄨˊ" => "hú",
    "ㄏㄨˇ" => "hǔ",
    "ㄏㄨˋ" => "hù",
    "ㄏㄨ˙" => "hu",
    "ㄏㄨㄚˉ" => "huā",
    "ㄏㄨㄚˊ" => "huá",
    "ㄏㄨㄚˋ" => "huà",
    "ㄏㄨㄚ˙" => "hua",
    "ㄏㄨㄞˊ" => "huái",
    "ㄏㄨㄞˋ" => "huài",
    "ㄏㄨㄢˉ" => "huān",
    "ㄏㄨㄢˊ" => "huán",
    "ㄏㄨㄢˇ" => "huǎn",
    "ㄏㄨㄢˋ" => "huàn",
    "ㄏㄨㄢ˙" => "huan",
    "ㄏㄨㄤˉ" => "huāng",
    "ㄏㄨㄤˊ" => "huáng",
    "ㄏㄨㄤˇ" => "huǎng",
    "ㄏㄨㄤˋ" => "huàng",
    "ㄏㄨㄤ˙" => "huang",
    "ㄏㄨㄟˉ" => "huī",
    "ㄏㄨㄟˊ" => "huí",
    "ㄏㄨㄟˇ" => "huǐ",
    "ㄏㄨㄟˋ" => "huì",
    "ㄏㄨㄟ˙" => "hui",
    "ㄏㄨㄣˉ" => "hūn",
    "ㄏㄨㄣˊ" => "hún",
    "ㄏㄨㄣˇ" => "hǔn",
    "ㄏㄨㄣˋ" => "hùn",
    "ㄏㄨㄛˉ" => "huō",
    "ㄏㄨㄛˊ" => "huó",
    "ㄏㄨㄛˇ" => "huǒ",
    "ㄏㄨㄛˋ" => "huò",
    "ㄐㄧˉ" => "jī",
    "ㄐㄧˊ" => "jí",
    "ㄐㄧˇ" => "jǐ",
    "ㄐㄧˋ" => "jì",
    "ㄐㄧ˙" => "ji",
    "ㄐㄧㄚˉ" => "jiā",
    "ㄐㄧㄚˊ" => "jiá",
    "ㄐㄧㄚˇ" => "jiǎ",
    "ㄐㄧㄚˋ" => "jià",
    "ㄐㄧㄚ˙" => "jia",
    "ㄐㄧㄢˉ" => "jiān",
    "ㄐㄧㄢˇ" => "jiǎn",
    "ㄐㄧㄢˋ" => "jiàn",
    "ㄐㄧㄢ˙" => "jian",
    "ㄐㄧㄤˉ" => "jiāng",
    "ㄐㄧㄤˇ" => "jiǎng",
    "ㄐㄧㄤˋ" => "jiàng",
    "ㄐㄧㄤ˙" => "jiang",
    "ㄐㄧㄠˉ" => "jiāo",
    "ㄐㄧㄠˇ" => "jiǎo",
    "ㄐㄧㄠˋ" => "jiào",
    "ㄐㄧㄠ˙" => "jiao",
    "ㄐㄧㄝˉ" => "jiē",
    "ㄐㄧㄝˊ" => "jié",
    "ㄐㄧㄝˇ" => "jiě",
    "ㄐㄧㄝˋ" => "jiè",
    "ㄐㄧㄝ˙" => "jie",
    "ㄐㄧㄣˉ" => "jīn",
    "ㄐㄧㄣˇ" => "jǐn",
    "ㄐㄧㄣˋ" => "jìn",
    "ㄐㄧㄣ˙" => "jin",
    "ㄐㄧㄥˉ" => "jīng",
    "ㄐㄧㄥˇ" => "jǐng",
    "ㄐㄧㄥˋ" => "jìng",
    "ㄐㄧㄥ˙" => "jing",
    "ㄐㄩㄥˉ" => "jiōng",
    "ㄐㄩㄥˇ" => "jiǒng",
    "ㄐㄧㄡˉ" => "jiū",
    "ㄐㄧㄡˊ" => "jiú",
    "ㄐㄧㄡˇ" => "jiǔ",
    "ㄐㄧㄡˋ" => "jiù",
    "ㄐㄧㄡ˙" => "jiu",
    "ㄐㄩˉ" => "jū",
    "ㄐㄩˊ" => "jú",
    "ㄐㄩˇ" => "jǔ",
    "ㄐㄩˋ" => "jù",
    "ㄐㄩ˙" => "ju",
    "ㄐㄩㄢˉ" => "juān",
    "ㄐㄩㄢˇ" => "juǎn",
    "ㄐㄩㄢˋ" => "juàn",
    "ㄐㄩㄝˉ" => "juē",
    "ㄐㄩㄝˊ" => "jué",
    "ㄐㄩㄝˇ" => "juě",
    "ㄐㄩㄝˋ" => "juè",
    "ㄐㄩㄣˉ" => "jūn",
    "ㄐㄩㄣˇ" => "jǔn",
    "ㄐㄩㄣˋ" => "jùn",
    "ㄎㄚˉ" => "kā",
    "ㄎㄚˇ" => "kǎ",
    "ㄎㄚ˙" => "ka",
    "ㄎㄞˉ" => "kāi",
    "ㄎㄞˇ" => "kǎi",
    "ㄎㄞˋ" => "kài",
    "ㄎㄢˉ" => "kān",
    "ㄎㄢˇ" => "kǎn",
    "ㄎㄢˋ" => "kàn",
    "ㄎㄤˉ" => "kāng",
    "ㄎㄤˊ" => "káng",
    "ㄎㄤˇ" => "kǎng",
    "ㄎㄤˋ" => "kàng",
    "ㄎㄠˉ" => "kāo",
    "ㄎㄠˇ" => "kǎo",
    "ㄎㄠˋ" => "kào",
    "ㄎㄜˉ" => "kē",
    "ㄎㄜˊ" => "ké",
    "ㄎㄜˇ" => "kě",
    "ㄎㄜˋ" => "kè",
    "ㄎㄜ˙" => "ke",
    "ㄎㄣˉ" => "kēn",
    "ㄎㄣˇ" => "kěn",
    "ㄎㄣˋ" => "kèn",
    "ㄎㄥˉ" => "kēng",
    "ㄎㄥˇ" => "kěng",
    "ㄎㄨㄥˉ" => "kōng",
    "ㄎㄨㄥˇ" => "kǒng",
    "ㄎㄨㄥˋ" => "kòng",
    "ㄎㄨㄥ˙" => "kong",
    "ㄎㄡˉ" => "kōu",
    "ㄎㄡˇ" => "kǒu",
    "ㄎㄡˋ" => "kòu",
    "ㄎㄨˉ" => "kū",
    "ㄎㄨˊ" => "kú",
    "ㄎㄨˇ" => "kǔ",
    "ㄎㄨˋ" => "kù",
    "ㄎㄨㄚˉ" => "kuā",
    "ㄎㄨㄚˇ" => "kuǎ",
    "ㄎㄨㄚˋ" => "kuà",
    "ㄎㄨㄚ˙" => "kua",
    "ㄎㄨㄞˇ" => "kuǎi",
    "ㄎㄨㄞˋ" => "kuài",
    "ㄎㄨㄞ˙" => "kuai",
    "ㄎㄨㄢˉ" => "kuān",
    "ㄎㄨㄢˇ" => "kuǎn",
    "ㄎㄨㄢ˙" => "kuan",
    "ㄎㄨㄤˉ" => "kuāng",
    "ㄎㄨㄤˊ" => "kuáng",
    "ㄎㄨㄤˇ" => "kuǎng",
    "ㄎㄨㄤˋ" => "kuàng",
    "ㄎㄨㄤ˙" => "kuang",
    "ㄎㄨㄟˉ" => "kuī",
    "ㄎㄨㄟˊ" => "kuí",
    "ㄎㄨㄟˇ" => "kuǐ",
    "ㄎㄨㄟˋ" => "kuì",
    "ㄎㄨㄣˉ" => "kūn",
    "ㄎㄨㄣˇ" => "kǔn",
    "ㄎㄨㄣˋ" => "kùn",
    "ㄎㄨㄣ˙" => "kun",
    "ㄎㄨㄛˋ" => "kuò",
    "ㄎㄨㄛ˙" => "kuo",
    "ㄌㄚˉ" => "lā",
    "ㄌㄚˊ" => "lá",
    "ㄌㄚˇ" => "lǎ",
    "ㄌㄚˋ" => "là",
    "ㄌㄚ˙" => "la",
    "ㄌㄞˊ" => "lái",
    "ㄌㄞˇ" => "lǎi",
    "ㄌㄞˋ" => "lài",
    "ㄌㄢˊ" => "lán",
    "ㄌㄢˇ" => "lǎn",
    "ㄌㄢˋ" => "làn",
    "ㄌㄢ˙" => "lan",
    "ㄌㄤˉ" => "lāng",
    "ㄌㄤˊ" => "láng",
    "ㄌㄤˇ" => "lǎng",
    "ㄌㄤˋ" => "làng",
    "ㄌㄤ˙" => "lang",
    "ㄌㄠˉ" => "lāo",
    "ㄌㄠˊ" => "láo",
    "ㄌㄠˇ" => "lǎo",
    "ㄌㄠˋ" => "lào",
    "ㄌㄠ˙" => "lao",
    "ㄌㄜˉ" => "lē",
    "ㄌㄜˋ" => "lè",
    "ㄌㄜ˙" => "le",
    "ㄌㄟˉ" => "lēi",
    "ㄌㄟˊ" => "léi",
    "ㄌㄟˇ" => "lěi",
    "ㄌㄟˋ" => "lèi",
    "ㄌㄟ˙" => "lei",
    "ㄌㄥˉ" => "lēng",
    "ㄌㄥˊ" => "léng",
    "ㄌㄥˇ" => "lěng",
    "ㄌㄥˋ" => "lèng",
    "ㄌㄧˊ" => "lí",
    "ㄌㄧˇ" => "lǐ",
    "ㄌㄧˋ" => "lì",
    "ㄌㄧ˙" => "li",
    "ㄌㄧㄚˇ" => "liǎ",
    "ㄌㄧㄢˊ" => "lián",
    "ㄌㄧㄢˇ" => "liǎn",
    "ㄌㄧㄢˋ" => "liàn",
    "ㄌㄧㄢ˙" => "lian",
    "ㄌㄧㄤˊ" => "liáng",
    "ㄌㄧㄤˇ" => "liǎng",
    "ㄌㄧㄤˋ" => "liàng",
    "ㄌㄧㄤ˙" => "liang",
    "ㄌㄧㄠˉ" => "liāo",
    "ㄌㄧㄠˊ" => "liáo",
    "ㄌㄧㄠˇ" => "liǎo",
    "ㄌㄧㄠˋ" => "liào",
    "ㄌㄧㄠ˙" => "liao",
    "ㄌㄧㄝˉ" => "liē",
    "ㄌㄧㄝˇ" => "liě",
    "ㄌㄧㄝˋ" => "liè",
    "ㄌㄧㄝ˙" => "lie",
    "ㄌㄧㄣˉ" => "līn",
    "ㄌㄧㄣˊ" => "lín",
    "ㄌㄧㄣˇ" => "lǐn",
    "ㄌㄧㄣˋ" => "lìn",
    "ㄌㄧㄥˊ" => "líng",
    "ㄌㄧㄥˇ" => "lǐng",
    "ㄌㄧㄥˋ" => "lìng",
    "ㄌㄧㄥ˙" => "ling",
    "ㄌㄧㄡˉ" => "liū",
    "ㄌㄧㄡˊ" => "liú",
    "ㄌㄧㄡˇ" => "liǔ",
    "ㄌㄧㄡˋ" => "liù",
    "ㄌㄧㄡ˙" => "liu",
    "ㄌㄛ˙" => "lo",
    "ㄌㄨㄥˊ" => "lóng",
    "ㄌㄨㄥˇ" => "lǒng",
    "ㄌㄨㄥˋ" => "lòng",
    "ㄌㄨㄥ˙" => "long",
    "ㄌㄡˉ" => "lōu",
    "ㄌㄡˊ" => "lóu",
    "ㄌㄡˇ" => "lǒu",
    "ㄌㄡˋ" => "lòu",
    "ㄌㄡ˙" => "lou",
    "ㄌㄨˉ" => "lū",
    "ㄌㄨˊ" => "lú",
    "ㄌㄨˇ" => "lǔ",
    "ㄌㄨˋ" => "lù",
    "ㄌㄨ˙" => "lu",
    "ㄌㄩˊ" => "lǘ",
    "ㄌㄩˇ" => "lǚ",
    "ㄌㄩˋ" => "lǜ",
    "ㄌㄩ˙" => "lü",
    "ㄌㄩㄝㄌㄨㄢˊ" => "luán",
    "ㄌㄩㄝㄌㄨㄢˇ" => "luǎn",
    "ㄌㄩㄝㄌㄨㄢˋ" => "luàn",
    "ㄌㄩㄝˋ" => "lüè",
    "ㄌㄨㄣˉ" => "lūn",
    "ㄌㄨㄣˊ" => "lún",
    "ㄌㄨㄣˇ" => "lǔn",
    "ㄌㄨㄣˋ" => "lùn",
    "ㄌㄨㄣ˙" => "lun",
    "ㄌㄨㄛˉ" => "luō",
    "ㄌㄨㄛˊ" => "luó",
    "ㄌㄨㄛˇ" => "luǒ",
    "ㄌㄨㄛˋ" => "luò",
    "ㄇˊ" => "ḿ",
    "ㄇㄚˉ" => "mā",
    "ㄇㄚˊ" => "má",
    "ㄇㄚˇ" => "mǎ",
    "ㄇㄚˋ" => "mà",
    "ㄇㄚ˙" => "ma",
    "ㄇㄞˊ" => "mái",
    "ㄇㄞˇ" => "mǎi",
    "ㄇㄞˋ" => "mài",
    "ㄇㄢˉ" => "mān",
    "ㄇㄢˊ" => "mán",
    "ㄇㄢˇ" => "mǎn",
    "ㄇㄢˋ" => "màn",
    "ㄇㄢ˙" => "man",
    "ㄇㄤˉ" => "māng",
    "ㄇㄤˊ" => "máng",
    "ㄇㄤˇ" => "mǎng",
    "ㄇㄤˋ" => "màng",
    "ㄇㄠˉ" => "māo",
    "ㄇㄠˊ" => "máo",
    "ㄇㄠˇ" => "mǎo",
    "ㄇㄠˋ" => "mào",
    "ㄇㄜ˙" => "me",
    "ㄇㄟˊ" => "méi",
    "ㄇㄟˇ" => "měi",
    "ㄇㄟˋ" => "mèi",
    "ㄇㄟ˙" => "mei",
    "ㄇㄣˊ" => "mén",
    "ㄇㄣˋ" => "mèn",
    "ㄇㄣ˙" => "men",
    "ㄇㄥˊ" => "méng",
    "ㄇㄥˇ" => "měng",
    "ㄇㄥˋ" => "mèng",
    "ㄇㄥ˙" => "meng",
    "ㄇㄧˉ" => "mī",
    "ㄇㄧˊ" => "mí",
    "ㄇㄧˇ" => "mǐ",
    "ㄇㄧˋ" => "mì",
    "ㄇㄧㄢˊ" => "mián",
    "ㄇㄧㄢˇ" => "miǎn",
    "ㄇㄧㄢˋ" => "miàn",
    "ㄇㄧㄠˉ" => "miāo",
    "ㄇㄧㄠˊ" => "miáo",
    "ㄇㄧㄠˇ" => "miǎo",
    "ㄇㄧㄠˋ" => "miào",
    "ㄇㄧㄝˉ" => "miē",
    "ㄇㄧㄝˊ" => "mié",
    "ㄇㄧㄝˋ" => "miè",
    "ㄇㄧㄣˊ" => "mín",
    "ㄇㄧㄣˇ" => "mǐn",
    "ㄇㄧㄣ˙" => "min",
    "ㄇㄧㄥˊ" => "míng",
    "ㄇㄧㄥˇ" => "mǐng",
    "ㄇㄧㄥˋ" => "mìng",
    "ㄇㄧㄥ˙" => "ming",
    "ㄇㄧㄡˇ" => "miǔ",
    "ㄇㄧㄡˋ" => "miù",
    "ㄇㄛˉ" => "mō",
    "ㄇㄛˊ" => "mó",
    "ㄇㄛˇ" => "mǒ",
    "ㄇㄛˋ" => "mò",
    "ㄇㄛ˙" => "mo",
    "ㄇㄡˉ" => "mōu",
    "ㄇㄡˊ" => "móu",
    "ㄇㄡˇ" => "mǒu",
    "ㄇㄡˋ" => "mòu",
    "ㄇㄨˊ" => "mú",
    "ㄇㄨˇ" => "mǔ",
    "ㄇㄨˋ" => "mù",
    "ㄇㄨ˙" => "mu",
    "ㄋˊ" => "ń",
    "ㄋˇ" => "ň",
    "ㄋˋ" => "ǹ",
    "ㄋ˙" => "n",
    "ㄋㄚˊ" => "ná",
    "ㄋㄚˇ" => "nǎ",
    "ㄋㄚˋ" => "nà",
    "ㄋㄞˊ" => "nái",
    "ㄋㄞˇ" => "nǎi",
    "ㄋㄞˋ" => "nài",
    "ㄋㄢˉ" => "nān",
    "ㄋㄢˊ" => "nán",
    "ㄋㄢˇ" => "nǎn",
    "ㄋㄢˋ" => "nàn",
    "ㄋㄢ˙" => "nan",
    "ㄋㄤˉ" => "nāng",
    "ㄋㄤˊ" => "náng",
    "ㄋㄤˇ" => "nǎng",
    "ㄋㄤˋ" => "nàng",
    "ㄋㄠˉ" => "nāo",
    "ㄋㄠˊ" => "náo",
    "ㄋㄠˇ" => "nǎo",
    "ㄋㄠˋ" => "nào",
    "ㄋㄠ˙" => "nao",
    "ㄋㄜˋ" => "nè",
    "ㄋㄜ˙" => "ne",
    "ㄋㄟˊ" => "néi",
    "ㄋㄟˇ" => "něi",
    "ㄋㄟˋ" => "nèi",
    "ㄋㄣˋ" => "nèn",
    "ㄋㄥˊ" => "néng",
    "ㄋㄥˇ" => "něng",
    "ㄋㄥˋ" => "nèng",
    "ㄋㄧˉ" => "nī",
    "ㄋㄧˊ" => "ní",
    "ㄋㄧˇ" => "nǐ",
    "ㄋㄧˋ" => "nì",
    "ㄋㄧ˙" => "ni",
    "ㄋㄧㄢˉ" => "niān",
    "ㄋㄧㄢˊ" => "nián",
    "ㄋㄧㄢˇ" => "niǎn",
    "ㄋㄧㄢˋ" => "niàn",
    "ㄋㄧㄢ˙" => "nian",
    "ㄋㄧㄤˊ" => "niáng",
    "ㄋㄧㄤˇ" => "niǎng",
    "ㄋㄧㄤˋ" => "niàng",
    "ㄋㄧㄤ˙" => "niang",
    "ㄋㄧㄠˇ" => "niǎo",
    "ㄋㄧㄠˋ" => "niào",
    "ㄋㄧㄝˉ" => "niē",
    "ㄋㄧㄝˊ" => "nié",
    "ㄋㄧㄝˇ" => "niě",
    "ㄋㄧㄝˋ" => "niè",
    "ㄋㄧㄝ˙" => "nie",
    "ㄋㄧㄣˊ" => "nín",
    "ㄋㄧㄣˇ" => "nǐn",
    "ㄋㄧㄣ˙" => "nin",
    "ㄋㄧㄥˊ" => "níng",
    "ㄋㄧㄥˇ" => "nǐng",
    "ㄋㄧㄥˋ" => "nìng",
    "ㄋㄧㄥ˙" => "ning",
    "ㄋㄧㄡˉ" => "niū",
    "ㄋㄧㄡˊ" => "niú",
    "ㄋㄧㄡˇ" => "niǔ",
    "ㄋㄧㄡˋ" => "niù",
    "ㄋㄧㄡ˙" => "niu",
    "ㄋㄨㄥˊ" => "nóng",
    "ㄋㄨㄥˇ" => "nǒng",
    "ㄋㄨㄥˋ" => "nòng",
    "ㄋㄡˊ" => "nóu",
    "ㄋㄡˇ" => "nǒu",
    "ㄋㄡˋ" => "nòu",
    "ㄋㄨˊ" => "nú",
    "ㄋㄨˇ" => "nǔ",
    "ㄋㄨˋ" => "nù",
    "ㄋㄩˊ" => "nǘ",
    "ㄋㄩˇ" => "nǚ",
    "ㄋㄩˋ" => "nǜ",
    "ㄋㄨㄢˊ" => "nuán",
    "ㄋㄨㄢˇ" => "nuǎn",
    "ㄋㄨㄢˋ" => "nuàn",
    "ㄋㄩㄝˋ" => "nüè",
    "ㄋㄨㄣˊ" => "nún",
    "ㄋㄨㄛˊ" => "nuó",
    "ㄋㄨㄛˇ" => "nuǒ",
    "ㄋㄨㄛˋ" => "nuò",
    "ㄛˉ" => "ō",
    "ㄛˊ" => "ó",
    "ㄛ˙" => "o",
    "ㄡˉ" => "ōu",
    "ㄡˊ" => "óu",
    "ㄡˇ" => "ǒu",
    "ㄡˋ" => "òu",
    "ㄡ˙" => "ou",
    "ㄆㄚˉ" => "pā",
    "ㄆㄚˊ" => "pá",
    "ㄆㄚˇ" => "pǎ",
    "ㄆㄚˋ" => "pà",
    "ㄆㄞˉ" => "pāi",
    "ㄆㄞˊ" => "pái",
    "ㄆㄞˇ" => "pǎi",
    "ㄆㄞˋ" => "pài",
    "ㄆㄢˉ" => "pān",
    "ㄆㄢˊ" => "pán",
    "ㄆㄢˇ" => "pǎn",
    "ㄆㄢˋ" => "pàn",
    "ㄆㄢ˙" => "pan",
    "ㄆㄤˉ" => "pāng",
    "ㄆㄤˊ" => "páng",
    "ㄆㄤˇ" => "pǎng",
    "ㄆㄤˋ" => "pàng",
    "ㄆㄠˉ" => "pāo",
    "ㄆㄠˊ" => "páo",
    "ㄆㄠˇ" => "pǎo",
    "ㄆㄠˋ" => "pào",
    "ㄆㄠ˙" => "pao",
    "ㄆㄟˉ" => "pēi",
    "ㄆㄟˊ" => "péi",
    "ㄆㄟˇ" => "pěi",
    "ㄆㄟˋ" => "pèi",
    "ㄆㄟ˙" => "pei",
    "ㄆㄣˉ" => "pēn",
    "ㄆㄣˊ" => "pén",
    "ㄆㄣˇ" => "pěn",
    "ㄆㄣˋ" => "pèn",
    "ㄆㄥˉ" => "pēng",
    "ㄆㄥˊ" => "péng",
    "ㄆㄥˇ" => "pěng",
    "ㄆㄥˋ" => "pèng",
    "ㄆㄥ˙" => "peng",
    "ㄆㄏㄉㄥ˙" => "phdeng", # ? probably not used in China
    "ㄆㄧˉ" => "pī",
    "ㄆㄧˊ" => "pí",
    "ㄆㄧˇ" => "pǐ",
    "ㄆㄧˋ" => "pì",
    "ㄆㄧ˙" => "pi",
    "ㄆㄧㄢˉ" => "piān",
    "ㄆㄧㄢˊ" => "pián",
    "ㄆㄧㄢˇ" => "piǎn",
    "ㄆㄧㄢˋ" => "piàn",
    "ㄆㄧㄢ˙" => "pian",
    "ㄆㄧㄠˉ" => "piāo",
    "ㄆㄧㄠˊ" => "piáo",
    "ㄆㄧㄠˇ" => "piǎo",
    "ㄆㄧㄠˋ" => "piào",
    "ㄆㄧㄝˉ" => "piē",
    "ㄆㄧㄝˇ" => "piě",
    "ㄆㄧㄝˋ" => "piè",
    "ㄆㄧㄣˉ" => "pīn",
    "ㄆㄧㄣˊ" => "pín",
    "ㄆㄧㄣˇ" => "pǐn",
    "ㄆㄧㄣˋ" => "pìn",
    "ㄆㄧㄥˉ" => "pīng",
    "ㄆㄧㄥˊ" => "píng",
    "ㄆㄧㄥˋ" => "pìng",
    "ㄆㄧㄥ˙" => "ping",
    "ㄆㄛˉ" => "pō",
    "ㄆㄛˊ" => "pó",
    "ㄆㄛˇ" => "pǒ",
    "ㄆㄛˋ" => "pò",
    "ㄆㄛ˙" => "po",
    "ㄆㄡˉ" => "pōu",
    "ㄆㄡˊ" => "póu",
    "ㄆㄡˇ" => "pǒu",
    "ㄆㄆㄨ˙" => "ppun", # ? probably not used in China
    "ㄆㄨˉ" => "pū",
    "ㄆㄨˊ" => "pú",
    "ㄆㄨˇ" => "pǔ",
    "ㄆㄨˋ" => "pù",
    "ㄆㄨ˙" => "pu",
    "ㄑㄧˉ" => "qī",
    "ㄑㄧˊ" => "qí",
    "ㄑㄧˇ" => "qǐ",
    "ㄑㄧˋ" => "qì",
    "ㄑㄧ˙" => "qi",
    "ㄑㄧㄚˉ" => "qiā",
    "ㄑㄧㄚˊ" => "qiá",
    "ㄑㄧㄚˇ" => "qiǎ",
    "ㄑㄧㄚˋ" => "qià",
    "ㄑㄧㄚ˙" => "qia",
    "ㄑㄧㄢˉ" => "qiān",
    "ㄑㄧㄢˊ" => "qián",
    "ㄑㄧㄢˇ" => "qiǎn",
    "ㄑㄧㄢˋ" => "qiàn",
    "ㄑㄧㄢ˙" => "qian",
    "ㄑㄧㄤˉ" => "qiāng",
    "ㄑㄧㄤˊ" => "qiáng",
    "ㄑㄧㄤˇ" => "qiǎng",
    "ㄑㄧㄤˋ" => "qiàng",
    "ㄑㄧㄤ˙" => "qiang",
    "ㄑㄧㄠˉ" => "qiāo",
    "ㄑㄧㄠˊ" => "qiáo",
    "ㄑㄧㄠˇ" => "qiǎo",
    "ㄑㄧㄠˋ" => "qiào",
    "ㄑㄧㄠ˙" => "qiao",
    "ㄑㄧㄝˉ" => "qiē",
    "ㄑㄧㄝˊ" => "qié",
    "ㄑㄧㄝˇ" => "qiě",
    "ㄑㄧㄝˋ" => "qiè",
    "ㄑㄧㄝ˙" => "qie",
    "ㄑㄧㄣˉ" => "qīn",
    "ㄑㄧㄣˊ" => "qín",
    "ㄑㄧㄣˇ" => "qǐn",
    "ㄑㄧㄣˋ" => "qìn",
    "ㄑㄧㄥˉ" => "qīng",
    "ㄑㄧㄥˊ" => "qíng",
    "ㄑㄧㄥˇ" => "qǐng",
    "ㄑㄧㄥˋ" => "qìng",
    "ㄑㄧㄥ˙" => "qing",
    "ㄑㄩㄥˉ" => "qiōng",
    "ㄑㄩㄥˊ" => "qióng",
    "ㄑㄩㄥˋ" => "qiòng",
    "ㄑㄩㄥ˙" => "qiong",
    "ㄑㄧㄡˉ" => "qiū",
    "ㄑㄧㄡˊ" => "qiú",
    "ㄑㄧㄡˇ" => "qiǔ",
    "ㄑㄧㄡˋ" => "qiù",
    "ㄑㄧㄡ˙" => "qiu",
    "ㄑㄩˉ" => "qū",
    "ㄑㄩˊ" => "qú",
    "ㄑㄩˇ" => "qǔ",
    "ㄑㄩˋ" => "qù",
    "ㄑㄩ˙" => "qu",
    "ㄑㄩㄢˉ" => "quān",
    "ㄑㄩㄢˊ" => "quán",
    "ㄑㄩㄢˇ" => "quǎn",
    "ㄑㄩㄢˋ" => "quàn",
    "ㄑㄩㄢ˙" => "quan",
    "ㄑㄩㄝˉ" => "quē",
    "ㄑㄩㄝˊ" => "qué",
    "ㄑㄩㄝˋ" => "què",
    "ㄑㄩㄝ˙" => "que",
    "ㄑㄩㄣˉ" => "qūn",
    "ㄑㄩㄣˊ" => "qún",
    "ㄑㄩㄣˇ" => "qǔn",
    "ㄦㄦ˙" => "r", # ? need to add a second ㄦ to make it different from "ㄦ˙" => "er"
    "ㄖㄚ˙" => "ra",
    "ㄖㄢˊ" => "rán",
    "ㄖㄢˇ" => "rǎn",
    "ㄖㄢˋ" => "ràn",
    "ㄖㄢ˙" => "ran",
    "ㄖㄤˊ" => "ráng",
    "ㄖㄤˇ" => "rǎng",
    "ㄖㄤˋ" => "ràng",
    "ㄖㄠˊ" => "ráo",
    "ㄖㄠˇ" => "rǎo",
    "ㄖㄠˋ" => "rào",
    "ㄖㄜˇ" => "rě",
    "ㄖㄜˋ" => "rè",
    "ㄖㄣˊ" => "rén",
    "ㄖㄣˇ" => "rěn",
    "ㄖㄣˋ" => "rèn",
    "ㄖㄣ˙" => "ren",
    "ㄖㄥˉ" => "rēng",
    "ㄖㄥˊ" => "réng",
    "ㄖㄥˋ" => "rèng",
    "ㄖˋ" => "rì",
    "ㄖㄨㄥˉ" => "rōng",
    "ㄖㄨㄥˊ" => "róng",
    "ㄖㄨㄥˇ" => "rǒng",
    "ㄖㄨㄥˋ" => "ròng",
    "ㄖㄨㄥ˙" => "rong",
    "ㄖㄡˊ" => "róu",
    "ㄖㄡˇ" => "rǒu",
    "ㄖㄡˋ" => "ròu",
    "ㄖㄨˊ" => "rú",
    "ㄖㄨˇ" => "rǔ",
    "ㄖㄨˋ" => "rù",
    "ㄖㄨ˙" => "ru",
    "ㄖㄨㄚˊ" => "ruá",
    "ㄖㄨㄢˊ" => "ruán",
    "ㄖㄨㄢˇ" => "ruǎn",
    "ㄖㄨㄢˋ" => "ruàn",
    "ㄖㄨㄟˊ" => "ruí",
    "ㄖㄨㄟˇ" => "ruǐ",
    "ㄖㄨㄟˋ" => "ruì",
    "ㄖㄨㄣˊ" => "rún",
    "ㄖㄨㄣˇ" => "rǔn",
    "ㄖㄨㄣˋ" => "rùn",
    "ㄖㄨㄛˊ" => "ruó",
    "ㄖㄨㄛˋ" => "ruò",
    "ㄖㄨㄛ˙" => "ruo",
    "ㄙㄚˉ" => "sā",
    "ㄙㄚˇ" => "sǎ",
    "ㄙㄚˋ" => "sà",
    "ㄙㄚ˙" => "sa",
    "ㄙㄞˉ" => "sāi",
    "ㄙㄞˇ" => "sǎi",
    "ㄙㄞˋ" => "sài",
    "ㄙㄞ˙" => "sai",
    "ㄙㄢˉ" => "sān",
    "ㄙㄢˇ" => "sǎn",
    "ㄙㄢˋ" => "sàn",
    "ㄙㄢ˙" => "san",
    "ㄙㄤˉ" => "sāng",
    "ㄙㄤˇ" => "sǎng",
    "ㄙㄤˋ" => "sàng",
    "ㄙㄤ˙" => "sang",
    "ㄙㄠˉ" => "sāo",
    "ㄙㄠˇ" => "sǎo",
    "ㄙㄠˋ" => "sào",
    "ㄙㄠ˙" => "sao",
    "ㄙㄜˉ" => "sē",
    "ㄙㄜˋ" => "sè",
    "ㄙㄜ˙" => "se",
    "ㄙㄣˉ" => "sēn",
    "ㄙㄣˇ" => "sěn",
    "ㄙㄥˉ" => "sēng",
    "ㄙㄥˋ" => "sèng",
    "ㄕㄚˉ" => "shā",
    "ㄕㄚˇ" => "shǎ",
    "ㄕㄚˋ" => "shà",
    "ㄕㄚ˙" => "sha",
    "ㄕㄞˉ" => "shāi",
    "ㄕㄞˇ" => "shǎi",
    "ㄕㄞˋ" => "shài",
    "ㄕㄢˉ" => "shān",
    "ㄕㄢˊ" => "shán",
    "ㄕㄢˇ" => "shǎn",
    "ㄕㄢˋ" => "shàn",
    "ㄕㄢ˙" => "shan",
    "ㄕㄤˉ" => "shāng",
    "ㄕㄤˇ" => "shǎng",
    "ㄕㄤˋ" => "shàng",
    "ㄕㄤ˙" => "shang",
    "ㄕㄠˉ" => "shāo",
    "ㄕㄠˊ" => "sháo",
    "ㄕㄠˇ" => "shǎo",
    "ㄕㄠˋ" => "shào",
    "ㄕㄠ˙" => "shao",
    "ㄕㄜˉ" => "shē",
    "ㄕㄜˊ" => "shé",
    "ㄕㄜˇ" => "shě",
    "ㄕㄜˋ" => "shè",
    "ㄕㄜ˙" => "she",
    "ㄕㄣˉ" => "shēn",
    "ㄕㄣˊ" => "shén",
    "ㄕㄣˇ" => "shěn",
    "ㄕㄣˋ" => "shèn",
    "ㄕㄣ˙" => "shen",
    "ㄕㄥˉ" => "shēng",
    "ㄕㄥˊ" => "shéng",
    "ㄕㄥˇ" => "shěng",
    "ㄕㄥˋ" => "shèng",
    "ㄕㄥ˙" => "sheng",
    "ㄕˉ" => "shī",
    "ㄕˊ" => "shí",
    "ㄕˇ" => "shǐ",
    "ㄕˋ" => "shì",
    "ㄕ˙" => "shi",
    "ㄕㄡˉ" => "shōu",
    "ㄕㄡˇ" => "shǒu",
    "ㄕㄡˋ" => "shòu",
    "ㄕㄡ˙" => "shou",
    "ㄕㄨˉ" => "shū",
    "ㄕㄨˊ" => "shú",
    "ㄕㄨˇ" => "shǔ",
    "ㄕㄨˋ" => "shù",
    "ㄕㄨ˙" => "shu",
    "ㄕㄨㄚˉ" => "shuā",
    "ㄕㄨㄚˇ" => "shuǎ",
    "ㄕㄨㄚˋ" => "shuà",
    "ㄕㄨㄞˉ" => "shuāi",
    "ㄕㄨㄞˇ" => "shuǎi",
    "ㄕㄨㄞˋ" => "shuài",
    "ㄕㄨㄢˉ" => "shuān",
    "ㄕㄨㄢˋ" => "shuàn",
    "ㄕㄨㄤˉ" => "shuāng",
    "ㄕㄨㄤˇ" => "shuǎng",
    "ㄕㄨㄤˋ" => "shuàng",
    "ㄕㄨㄤ˙" => "shuang",
    "ㄕㄨㄟˊ" => "shuí",
    "ㄕㄨㄟˇ" => "shuǐ",
    "ㄕㄨㄟˋ" => "shuì",
    "ㄕㄨㄟ˙" => "shui",
    "ㄕㄨㄣˇ" => "shǔn",
    "ㄕㄨㄣˋ" => "shùn",
    "ㄕㄨㄛˉ" => "shuō",
    "ㄕㄨㄛˋ" => "shuò",
    "ㄙˉ" => "sī",
    "ㄙˇ" => "sǐ",
    "ㄙˋ" => "sì",
    "ㄙ˙" => "si",
    "ㄙㄨㄥˉ" => "sōng",
    "ㄙㄨㄥˊ" => "sóng",
    "ㄙㄨㄥˇ" => "sǒng",
    "ㄙㄨㄥˋ" => "sòng",
    "ㄙㄨㄥ˙" => "song",
    "ㄙㄡˉ" => "sōu",
    "ㄙㄡˇ" => "sǒu",
    "ㄙㄡˋ" => "sòu",
    "ㄙㄡ˙" => "sou",
    "ㄙㄨˉ" => "sū",
    "ㄙㄨˊ" => "sú",
    "ㄙㄨˇ" => "sǔ",
    "ㄙㄨˋ" => "sù",
    "ㄙㄨ˙" => "su",
    "ㄙㄨㄢˉ" => "suān",
    "ㄙㄨㄢˇ" => "suǎn",
    "ㄙㄨㄢˋ" => "suàn",
    "ㄙㄨㄟˉ" => "suī",
    "ㄙㄨㄟˊ" => "suí",
    "ㄙㄨㄟˇ" => "suǐ",
    "ㄙㄨㄟˋ" => "suì",
    "ㄙㄨㄣˉ" => "sūn",
    "ㄙㄨㄣˇ" => "sǔn",
    "ㄙㄨㄛˉ" => "suō",
    "ㄙㄨㄛˊ" => "suó",
    "ㄙㄨㄛˇ" => "suǒ",
    "ㄙㄨㄛˋ" => "suò",
    "ㄙㄨㄛ˙" => "suo",
    "ㄊㄚˉ" => "tā",
    "ㄊㄚˊ" => "tá",
    "ㄊㄚˇ" => "tǎ",
    "ㄊㄚˋ" => "tà",
    "ㄊㄚ˙" => "ta",
    "ㄊㄞˉ" => "tāi",
    "ㄊㄞˊ" => "tái",
    "ㄊㄞˇ" => "tǎi",
    "ㄊㄞˋ" => "tài",
    "ㄊㄞ˙" => "tai",
    "ㄊㄢˉ" => "tān",
    "ㄊㄢˊ" => "tán",
    "ㄊㄢˇ" => "tǎn",
    "ㄊㄢˋ" => "tàn",
    "ㄊㄤˉ" => "tāng",
    "ㄊㄤˊ" => "táng",
    "ㄊㄤˇ" => "tǎng",
    "ㄊㄤˋ" => "tàng",
    "ㄊㄠˉ" => "tāo",
    "ㄊㄠˊ" => "táo",
    "ㄊㄠˇ" => "tǎo",
    "ㄊㄠˋ" => "tào",
    "ㄊㄜˋ" => "tè",
    "ㄊㄥˉ" => "tēng",
    "ㄊㄥˊ" => "téng",
    "ㄊㄥˋ" => "tèng",
    "ㄊㄥ˙" => "teng",
    "ㄊㄧˉ" => "tī",
    "ㄊㄧˊ" => "tí",
    "ㄊㄧˇ" => "tǐ",
    "ㄊㄧˋ" => "tì",
    "ㄊㄧ˙" => "ti",
    "ㄊㄧㄢˉ" => "tiān",
    "ㄊㄧㄢˊ" => "tián",
    "ㄊㄧㄢˇ" => "tiǎn",
    "ㄊㄧㄢˋ" => "tiàn",
    "ㄊㄧㄢ˙" => "tian",
    "ㄊㄧㄠˉ" => "tiāo",
    "ㄊㄧㄠˊ" => "tiáo",
    "ㄊㄧㄠˇ" => "tiǎo",
    "ㄊㄧㄠˋ" => "tiào",
    "ㄊㄧㄠ˙" => "tiao",
    "ㄊㄧㄝˉ" => "tiē",
    "ㄊㄧㄝˊ" => "tié",
    "ㄊㄧㄝˇ" => "tiě",
    "ㄊㄧㄝˋ" => "tiè",
    "ㄊㄧㄥˉ" => "tīng",
    "ㄊㄧㄥˊ" => "tíng",
    "ㄊㄧㄥˇ" => "tǐng",
    "ㄊㄧㄥˋ" => "tìng",
    "ㄊㄨㄥˉ" => "tōng",
    "ㄊㄨㄥˊ" => "tóng",
    "ㄊㄨㄥˇ" => "tǒng",
    "ㄊㄨㄥˋ" => "tòng",
    "ㄊㄡˉ" => "tōu",
    "ㄊㄡˊ" => "tóu",
    "ㄊㄡˇ" => "tǒu",
    "ㄊㄡˋ" => "tòu",
    "ㄊㄨˉ" => "tū",
    "ㄊㄨˊ" => "tú",
    "ㄊㄨˇ" => "tǔ",
    "ㄊㄨˋ" => "tù",
    "ㄊㄨ˙" => "tu",
    "ㄊㄨㄢˉ" => "tuān",
    "ㄊㄨㄢˊ" => "tuán",
    "ㄊㄨㄢˇ" => "tuǎn",
    "ㄊㄨㄢˋ" => "tuàn",
    "ㄊㄨㄟˉ" => "tuī",
    "ㄊㄨㄟˊ" => "tuí",
    "ㄊㄨㄟˇ" => "tuǐ",
    "ㄊㄨㄟˋ" => "tuì",
    "ㄊㄨㄣˉ" => "tūn",
    "ㄊㄨㄣˊ" => "tún",
    "ㄊㄨㄣˇ" => "tǔn",
    "ㄊㄨㄣˋ" => "tùn",
    "ㄊㄨㄛˉ" => "tuō",
    "ㄊㄨㄛˊ" => "tuó",
    "ㄊㄨㄛˇ" => "tuǒ",
    "ㄊㄨㄛˋ" => "tuò",
    "ㄊㄨㄛ˙" => "tuo",
    "ㄨㄚˉ" => "wā",
    "ㄨㄚˊ" => "wá",
    "ㄨㄚˇ" => "wǎ",
    "ㄨㄚˋ" => "wà",
    "ㄨㄚ˙" => "wa",
    "ㄨㄞˉ" => "wāi",
    "ㄨㄞˇ" => "wǎi",
    "ㄨㄞˋ" => "wài",
    "ㄨㄢˉ" => "wān",
    "ㄨㄢˊ" => "wán",
    "ㄨㄢˇ" => "wǎn",
    "ㄨㄢˋ" => "wàn",
    "ㄨㄢ˙" => "wan",
    "ㄨㄤˉ" => "wāng",
    "ㄨㄤˊ" => "wáng",
    "ㄨㄤˇ" => "wǎng",
    "ㄨㄤˋ" => "wàng",
    "ㄨㄤ˙" => "wang",
    "ㄨㄟˉ" => "wēi",
    "ㄨㄟˊ" => "wéi",
    "ㄨㄟˇ" => "wěi",
    "ㄨㄟˋ" => "wèi",
    "ㄨㄟ˙" => "wei",
    "ㄨㄣˉ" => "wēn",
    "ㄨㄣˊ" => "wén",
    "ㄨㄣˇ" => "wěn",
    "ㄨㄣˋ" => "wèn",
    "ㄨㄣ˙" => "wen",
    "ㄨㄥˉ" => "wēng",
    "ㄨㄥˇ" => "wěng",
    "ㄨㄥˋ" => "wèng",
    "ㄨㄛˉ" => "wō",
    "ㄨㄛˇ" => "wǒ",
    "ㄨㄛˋ" => "wò",
    "ㄨㄛㄫˋ" => "wòng", # ?
    "ㄨˉ" => "wū",
    "ㄨˊ" => "wú",
    "ㄨˇ" => "wǔ",
    "ㄨˋ" => "wù",
    "ㄨ˙" => "wu",
    "ㄒㄧˉ" => "xī",
    "ㄒㄧˊ" => "xí",
    "ㄒㄧˇ" => "xǐ",
    "ㄒㄧˋ" => "xì",
    "ㄒㄧ˙" => "xi",
    "ㄒㄧㄚˉ" => "xiā",
    "ㄒㄧㄚˊ" => "xiá",
    "ㄒㄧㄚˇ" => "xiǎ",
    "ㄒㄧㄚˋ" => "xià",
    "ㄒㄧㄚ˙" => "xia",
    "ㄒㄧㄢˉ" => "xiān",
    "ㄒㄧㄢˊ" => "xián",
    "ㄒㄧㄢˇ" => "xiǎn",
    "ㄒㄧㄢˋ" => "xiàn",
    "ㄒㄧㄢ˙" => "xian",
    "ㄒㄧㄤˉ" => "xiāng",
    "ㄒㄧㄤˊ" => "xiáng",
    "ㄒㄧㄤˇ" => "xiǎng",
    "ㄒㄧㄤˋ" => "xiàng",
    "ㄒㄧㄤ˙" => "xiang",
    "ㄒㄧㄠˉ" => "xiāo",
    "ㄒㄧㄠˊ" => "xiáo",
    "ㄒㄧㄠˇ" => "xiǎo",
    "ㄒㄧㄠˋ" => "xiào",
    "ㄒㄧㄠ˙" => "xiao",
    "ㄒㄧㄝˉ" => "xiē",
    "ㄒㄧㄝˊ" => "xié",
    "ㄒㄧㄝˇ" => "xiě",
    "ㄒㄧㄝˋ" => "xiè",
    "ㄒㄧㄝ˙" => "xie",
    "ㄒㄧㄣˉ" => "xīn",
    "ㄒㄧㄣˊ" => "xín",
    "ㄒㄧㄣˇ" => "xǐn",
    "ㄒㄧㄣˋ" => "xìn",
    "ㄒㄧㄣ˙" => "xin",
    "ㄒㄧㄥˉ" => "xīng",
    "ㄒㄧㄥˊ" => "xíng",
    "ㄒㄧㄥˇ" => "xǐng",
    "ㄒㄧㄥˋ" => "xìng",
    "ㄒㄧㄥ˙" => "xing",
    "ㄒㄩㄥˉ" => "xiōng",
    "ㄒㄩㄥˊ" => "xióng",
    "ㄒㄩㄥˇ" => "xiǒng",
    "ㄒㄩㄥˋ" => "xiòng",
    "ㄒㄧㄡˉ" => "xiū",
    "ㄒㄧㄡˊ" => "xiú",
    "ㄒㄧㄡˇ" => "xiǔ",
    "ㄒㄧㄡˋ" => "xiù",
    "ㄒㄧㄡ˙" => "xiu",
    "ㄒㄩˉ" => "xū",
    "ㄒㄩˊ" => "xú",
    "ㄒㄩˇ" => "xǔ",
    "ㄒㄩˋ" => "xù",
    "ㄒㄩ˙" => "xu",
    "ㄒㄩㄢˉ" => "xuān",
    "ㄒㄩㄢˊ" => "xuán",
    "ㄒㄩㄢˇ" => "xuǎn",
    "ㄒㄩㄢˋ" => "xuàn",
    "ㄒㄩㄢ˙" => "xuan",
    "ㄒㄩㄝˉ" => "xuē",
    "ㄒㄩㄝˊ" => "xué",
    "ㄒㄩㄝˇ" => "xuě",
    "ㄒㄩㄝˋ" => "xuè",
    "ㄒㄩㄝ˙" => "xue",
    "ㄒㄩㄣˉ" => "xūn",
    "ㄒㄩㄣˊ" => "xún",
    "ㄒㄩㄣˋ" => "xùn",
    "ㄒㄩㄣ˙" => "xun",
    "ㄧㄚˉ" => "yā",
    "ㄧㄚˊ" => "yá",
    "ㄧㄚˇ" => "yǎ",
    "ㄧㄚˋ" => "yà",
    "ㄧㄚ˙" => "ya",
    "ㄧㄢˉ" => "yān",
    "ㄧㄢˊ" => "yán",
    "ㄧㄢˇ" => "yǎn",
    "ㄧㄢˋ" => "yàn",
    "ㄧㄢ˙" => "yan",
    "ㄧㄤˉ" => "yāng",
    "ㄧㄤˊ" => "yáng",
    "ㄧㄤˇ" => "yǎng",
    "ㄧㄤˋ" => "yàng",
    "ㄧㄤ˙" => "yang",
    "ㄧㄠˉ" => "yāo",
    "ㄧㄠˊ" => "yáo",
    "ㄧㄠˇ" => "yǎo",
    "ㄧㄠˋ" => "yào",
    "ㄧㄝˉ" => "yē",
    "ㄧㄝˊ" => "yé",
    "ㄧㄝˇ" => "yě",
    "ㄧㄝˋ" => "yè",
    "ㄧㄝ˙" => "ye",
    "ㄧˉ" => "yī",
    "ㄧˊ" => "yí",
    "ㄧˇ" => "yǐ",
    "ㄧˋ" => "yì",
    "ㄧ˙" => "yi",
    "ㄧㄣˉ" => "yīn",
    "ㄧㄣˊ" => "yín",
    "ㄧㄣˇ" => "yǐn",
    "ㄧㄣˋ" => "yìn",
    "ㄧㄣ˙" => "yin",
    "ㄧㄥˉ" => "yīng",
    "ㄧㄥˊ" => "yíng",
    "ㄧㄥˇ" => "yǐng",
    "ㄧㄥˋ" => "yìng",
    "ㄧㄥ˙" => "ying",
    "ㄧㄛˉ" => "yō",
    "ㄩㄥˉ" => "yōng",
    "ㄩㄥˊ" => "yóng",
    "ㄩㄥˇ" => "yǒng",
    "ㄩㄥˋ" => "yòng",
    "ㄩㄥ˙" => "yong",
    "ㄧㄡˉ" => "yōu",
    "ㄧㄡˊ" => "yóu",
    "ㄧㄡˇ" => "yǒu",
    "ㄧㄡˋ" => "yòu",
    "ㄧㄡ˙" => "you",
    "ㄩˉ" => "yū",
    "ㄩˊ" => "yú",
    "ㄩˇ" => "yǔ",
    "ㄩˋ" => "yù",
    "ㄩ˙" => "yu",
    "ㄩㄢˉ" => "yuān",
    "ㄩㄢˊ" => "yuán",
    "ㄩㄢˇ" => "yuǎn",
    "ㄩㄢˋ" => "yuàn",
    "ㄩㄢ˙" => "yuan",
    "ㄩㄝˉ" => "yuē",
    "ㄩㄝˇ" => "yuě",
    "ㄩㄝˋ" => "yuè",
    "ㄩㄣˉ" => "yūn",
    "ㄩㄣˊ" => "yún",
    "ㄩㄣˇ" => "yǔn",
    "ㄩㄣˋ" => "yùn",
    "ㄩㄣ˙" => "yun",
    "ㄗㄚˉ" => "zā",
    "ㄗㄚˊ" => "zá",
    "ㄗㄚˇ" => "zǎ",
    "ㄗㄞˉ" => "zāi",
    "ㄗㄞˇ" => "zǎi",
    "ㄗㄞˋ" => "zài",
    "ㄗㄢˉ" => "zān",
    "ㄗㄢˊ" => "zán",
    "ㄗㄢˇ" => "zǎn",
    "ㄗㄢˋ" => "zàn",
    "ㄗㄤˉ" => "zāng",
    "ㄗㄤˇ" => "zǎng",
    "ㄗㄤˋ" => "zàng",
    "ㄗㄠˉ" => "zāo",
    "ㄗㄠˊ" => "záo",
    "ㄗㄠˇ" => "zǎo",
    "ㄗㄠˋ" => "zào",
    "ㄗㄠ˙" => "zao",
    "ㄗㄜˊ" => "zé",
    "ㄗㄜˋ" => "zè",
    "ㄗㄜ˙" => "ze",
    "ㄗㄟˊ" => "zéi",
    "ㄗㄣˉ" => "zēn",
    "ㄗㄣˇ" => "zěn",
    "ㄗㄣˋ" => "zèn",
    "ㄗㄣ˙" => "zen",
    "ㄗㄥˉ" => "zēng",
    "ㄗㄥˇ" => "zěng",
    "ㄗㄥˋ" => "zèng",
    "ㄗㄥ˙" => "zeng",
    "ㄓㄚˉ" => "zhā",
    "ㄓㄚˊ" => "zhá",
    "ㄓㄚˇ" => "zhǎ",
    "ㄓㄚˋ" => "zhà",
    "ㄓㄞˉ" => "zhāi",
    "ㄓㄞˊ" => "zhái",
    "ㄓㄞˇ" => "zhǎi",
    "ㄓㄞˋ" => "zhài",
    "ㄓㄞ˙" => "zhai",
    "ㄓㄢˉ" => "zhān",
    "ㄓㄢˊ" => "zhán",
    "ㄓㄢˇ" => "zhǎn",
    "ㄓㄢˋ" => "zhàn",
    "ㄓㄤˉ" => "zhāng",
    "ㄓㄤˇ" => "zhǎng",
    "ㄓㄤˋ" => "zhàng",
    "ㄓㄤ˙" => "zhang",
    "ㄓㄠˉ" => "zhāo",
    "ㄓㄠˇ" => "zhǎo",
    "ㄓㄠˋ" => "zhào",
    "ㄓㄠ˙" => "zhao",
    "ㄓㄜˉ" => "zhē",
    "ㄓㄜˊ" => "zhé",
    "ㄓㄜˇ" => "zhě",
    "ㄓㄜˋ" => "zhè",
    "ㄓㄜ˙" => "zhe",
    "ㄓㄣˉ" => "zhēn",
    "ㄓㄣˊ" => "zhén",
    "ㄓㄣˇ" => "zhěn",
    "ㄓㄣˋ" => "zhèn",
    "ㄓㄣ˙" => "zhen",
    "ㄓㄥˉ" => "zhēng",
    "ㄓㄥˇ" => "zhěng",
    "ㄓㄥˋ" => "zhèng",
    "ㄓㄥ˙" => "zheng",
    "ㄓˉ" => "zhī",
    "ㄓˊ" => "zhí",
    "ㄓˇ" => "zhǐ",
    "ㄓˋ" => "zhì",
    "ㄓ˙" => "zhi",
    "ㄓㄨㄥˉ" => "zhōng",
    "ㄓㄨㄥˇ" => "zhǒng",
    "ㄓㄨㄥˋ" => "zhòng",
    "ㄓㄨㄥ˙" => "zhong",
    "ㄓㄡˉ" => "zhōu",
    "ㄓㄡˊ" => "zhóu",
    "ㄓㄡˇ" => "zhǒu",
    "ㄓㄡˋ" => "zhòu",
    "ㄓㄡ˙" => "zhou",
    "ㄓㄨˉ" => "zhū",
    "ㄓㄨˊ" => "zhú",
    "ㄓㄨˇ" => "zhǔ",
    "ㄓㄨˋ" => "zhù",
    "ㄓㄨ˙" => "zhu",
    "ㄓㄨㄚˉ" => "zhuā",
    "ㄓㄨㄚˇ" => "zhuǎ",
    "ㄓㄨㄞˉ" => "zhuāi",
    "ㄓㄨㄞˇ" => "zhuǎi",
    "ㄓㄨㄞˋ" => "zhuài",
    "ㄓㄨㄢˉ" => "zhuān",
    "ㄓㄨㄢˇ" => "zhuǎn",
    "ㄓㄨㄢˋ" => "zhuàn",
    "ㄓㄨㄤˉ" => "zhuāng",
    "ㄓㄨㄤˇ" => "zhuǎng",
    "ㄓㄨㄤˋ" => "zhuàng",
    "ㄓㄨㄤ˙" => "zhuang",
    "ㄓㄨㄟˉ" => "zhuī",
    "ㄓㄨㄟˇ" => "zhuǐ",
    "ㄓㄨㄟˋ" => "zhuì",
    "ㄓㄨㄟ˙" => "zhui",
    "ㄓㄨㄣˉ" => "zhūn",
    "ㄓㄨㄣˇ" => "zhǔn",
    "ㄓㄨㄣˋ" => "zhùn",
    "ㄓㄨㄣ˙" => "zhun",
    "ㄓㄨㄛˉ" => "zhuō",
    "ㄓㄨㄛˊ" => "zhuó",
    "ㄓㄨㄛˋ" => "zhuò",
    "ㄓㄨㄛ˙" => "zhuo",
    "ㄗˉ" => "zī",
    "ㄗˊ" => "zí",
    "ㄗˇ" => "zǐ",
    "ㄗˋ" => "zì",
    "ㄗ˙" => "zi",
    "ㄗㄨㄥˉ" => "zōng",
    "ㄗㄨㄥˇ" => "zǒng",
    "ㄗㄨㄥˋ" => "zòng",
    "ㄗㄨㄥ˙" => "zong",
    "ㄗㄡˉ" => "zōu",
    "ㄗㄡˇ" => "zǒu",
    "ㄗㄡˋ" => "zòu",
    "ㄗㄡ˙" => "zou",
    "ㄗㄨˉ" => "zū",
    "ㄗㄨˊ" => "zú",
    "ㄗㄨˇ" => "zǔ",
    "ㄗㄨˋ" => "zù",
    "ㄗㄨ˙" => "zu",
    "ㄗㄨㄢˉ" => "zuān",
    "ㄗㄨㄢˇ" => "zuǎn",
    "ㄗㄨㄢˋ" => "zuàn",
    "ㄗㄨㄟˉ" => "zuī",
    "ㄗㄨㄟˇ" => "zuǐ",
    "ㄗㄨㄟˋ" => "zuì",
    "ㄗㄨㄟ˙" => "zui",
    "ㄗㄨㄣˉ" => "zūn",
    "ㄗㄨㄣˇ" => "zǔn",
    "ㄗㄨㄣˋ" => "zùn",
    "ㄗㄨㄣ˙" => "zun",
    "ㄗㄨㄛˉ" => "zuō",
    "ㄗㄨㄛˊ" => "zuó",
    "ㄗㄨㄛˇ" => "zuǒ",
    "ㄗㄨㄛˋ" => "zuò",
    "ㄗㄨㄛ˙" => "zuo",
    );

my $radicalList = "⼀⼁⼂⼃⼄⼅⼆⼇⼈⼉⼊⼋⼌⼍⼎⼏⼐⼑⼒⼓⼔⼕⼖⼗⼘⼙⼚⼛⼜⼝⼞⼟⼠⼡⼢⼣⼤⼥⼦⼧⼨⼩⼪⼫⼬⼭⼮⼯⼰⼱⼲⼳⼴⼵⼶⼷⼸⼹⼺⼻⼼⼽⼾⼿⽀⽁⽂⽃⽄⽅⽆⽇⽈⽉⽊⽋⽌⽍⽎⽏⽐⽑⽒⽓⽔⽕⽖⽗⽘⽙⽚⽛⽜⽝⽞⽟⽠⽡⽢⽣⽤⽥⽦⽧⽨⽩⽪⽫⽬⽭⽮⽯⽰⽱⽲⽳⽴⽵⽶⽷⽸⽹⽺⽻⽼⽽⽾⽿⾀⾁⾂⾃⾄⾅⾆⾇⾈⾉⾊⾋⾌⾍⾎⾏⾐⾑⾒⾓⾔⾕⾖⾗⾘⾙⾚⾛⾜⾝⾞⾟⾠⾡⾢⾣⾤⾥⾦⾧⾨⾩⾪⾫⾬⾭⾮⾯⾰⾱⾲⾳⾴⾵⾶⾷⾸⾹⾺⾻⾼⾽⾾⾿⿀⿁⿂⿃⿄⿅⿆⿇⿈⿉⿊⿋⿌⿍⿎⿏⿐⿑⿒⿓⿔⿕";

# this array needs not to be sorted, it is sorted when needed
# by the zhuyinCompare() function, the zhuyin order
# we want is defined there.
my @zhuyinCharacters = ("ㄅ", "ㄆ", "ㄇ", "ㄈ", "ㄉ", "ㄊ", "ㄋ", "ㄌ", "ㄍ", "ㄎ", "ㄏ", "ㄐ", "ㄑ", "ㄒ", "ㄓ", "ㄔ", "ㄕ", "ㄖ", "ㄗ", "ㄘ", "ㄙ", "ㄚ", "ㄛ", "ㄜ", "ㄝ", "ㄞ", "ㄟ", "ㄠ", "ㄡ", "ㄢ", "ㄣ", "ㄤ", "ㄥ", "ㄦ", "ㄧ", "ㄨ", "ㄩ", "ㄪ", "ㄫ", "ㄬ", "ㄭ");

my %fullWidthChars = (
    "a" => "ａ",
    "A" => "Ａ",
    "b" => "ｂ",
    "B" => "Ｂ",
    "c" => "ｃ",
    "C" => "Ｃ",
    "d" => "ｄ",
    "D" => "Ｄ",
    "e" => "ｅ",
    "E" => "Ｅ",
    "f" => "ｆ",
    "F" => "Ｆ",
    "g" => "ｇ",
    "G" => "Ｇ",
    "h" => "ｈ",
    "H" => "Ｈ",
    "i" => "ｉ",
    "I" => "Ｉ",
    "j" => "ｊ",
    "J" => "Ｊ",
    "k" => "ｋ",
    "K" => "Ｋ",
    "l" => "ｌ",
    "L" => "Ｌ",
    "m" => "ｍ",
    "M" => "Ｍ",
    "n" => "ｎ",
    "N" => "Ｎ",
    "o" => "ｏ",
    "O" => "Ｏ",
    "p" => "ｐ",
    "P" => "Ｐ",
    "q" => "ｑ",
    "Q" => "Ｑ",
    "r" => "ｒ",
    "R" => "Ｒ",
    "s" => "ｓ",
    "S" => "Ｓ",
    "t" => "ｔ",
    "T" => "Ｔ",
    "u" => "ｕ",
    "U" => "Ｕ",
    "v" => "ｖ",
    "V" => "Ｖ",
    "w" => "ｗ",
    "W" => "Ｗ",
    "x" => "ｘ",
    "X" => "Ｘ",
    "y" => "ｙ",
    "Y" => "Ｙ",
    "z" => "ｚ",
    "Z" => "Ｚ",
    );

#----------------------------------------------------------------------
# subroutines:

sub usage {
    printf STDERR "Usage: collation-converter [option] ...\n";
    printf STDERR "-v, --verbosity         print some progress messages to standard output.\n";
    printf STDERR "    --version           display version and exit.\n";
    printf STDERR "-h, --help              display this help and exit.\n";
    printf STDERR "-i, --input             input file.\n";
    printf STDERR "-o, --output            output file.\n";
    printf STDERR "\n";
    printf STDERR "Example: “./collation-converter -i zh.xml -o zh.txt”\n";
    exit 1;
}

sub mySystem {
    my ($command) = @_;
    if ($OPT_VERBOSITY >= 1) {
        print "executing: $command\n";
    }
    return system ($command);
}

sub myExit {
    my ($value) =@_;
    exit ($value);
}

sub zhuyinCompare ($$); # prototype declaration
sub zhuyinCompare ($$) {
    my ($a, $b) = @_;
    my $zhuyinOrder =
        "ˉ". # U+02C9 MODIFIER LETTER MACRON
        "ˊ". # U+02CA MODIFIER LETTER ACUTE ACCENT
        "ˇ". # U+02C7 CARON
        "ˋ". # U+02CB MODIFIER LETTER GRAVE ACCENT
        "˙". # U+02D9 DOT ABOVE
        # order according to the 1919 standard
        # described at
        # http://zh.wikipedia.org/wiki/%E6%B3%A8%E9%9F%B3%E7%AC%A6%E8%99%9F#.E6.8E.92.E5.BA.8F
        # Initial:
        "ㄅ". # U+3105 BOPOMOFO LETTER B
        "ㄆ". # U+3106 BOPOMOFO LETTER P
        "ㄇ". # U+3107 BOPOMOFO LETTER M
        "ㄈ". # U+3108 BOPOMOFO LETTER F
        "ㄉ". # U+3109 BOPOMOFO LETTER D
        "ㄊ". # U+310A BOPOMOFO LETTER T
        "ㄋ". # U+310B BOPOMOFO LETTER N
        "ㄌ". # U+310C BOPOMOFO LETTER L
        "ㄍ". # U+310D BOPOMOFO LETTER G
        "ㄎ". # U+310E BOPOMOFO LETTER K
        "ㄏ". # U+310F BOPOMOFO LETTER H
        "ㄐ". # U+3110 BOPOMOFO LETTER J
        "ㄑ". # U+3111 BOPOMOFO LETTER Q
        "ㄒ". # U+3112 BOPOMOFO LETTER X
        "ㄓ". # U+3113 BOPOMOFO LETTER ZH
        "ㄔ". # U+3114 BOPOMOFO LETTER CH
        "ㄕ". # U+3115 BOPOMOFO LETTER SH
        "ㄖ". # U+3116 BOPOMOFO LETTER R
        "ㄗ". # U+3117 BOPOMOFO LETTER Z
        "ㄘ". # U+3118 BOPOMOFO LETTER C
        "ㄙ". # U+3119 BOPOMOFO LETTER S
        # Medial:
        "ㄧ". # U+3127 BOPOMOFO LETTER I
        "ㄨ". # U+3128 BOPOMOFO LETTER U
        "ㄩ". # U+3129 BOPOMOFO LETTER IU
        # Final:
        "ㄚ". # U+311A BOPOMOFO LETTER A
        "ㄛ". # U+311B BOPOMOFO LETTER O
        "ㄜ". # U+311C BOPOMOFO LETTER E
        "ㄝ". # U+311D BOPOMOFO LETTER EH
        "ㄞ". # U+311E BOPOMOFO LETTER AI
        "ㄟ". # U+311F BOPOMOFO LETTER EI
        "ㄠ". # U+3120 BOPOMOFO LETTER AU
        "ㄡ". # U+3121 BOPOMOFO LETTER OU
        "ㄢ". # U+3122 BOPOMOFO LETTER AN
        "ㄣ". # U+3123 BOPOMOFO LETTER EN
        "ㄤ". # U+3124 BOPOMOFO LETTER ANG
        "ㄥ". # U+3125 BOPOMOFO LETTER ENG
        "ㄦ". # U+3126 BOPOMOFO LETTER ER
        # unusual and obsolete characters:
        "ㄪ". # U+312A BOPOMOFO LETTER V
        "ㄫ". # U+312B BOPOMOFO LETTER NG
        "ㄬ". # U+312C BOPOMOFO LETTER GN
        "ㄭ"; # U+312D BOPOMOFO LETTER IH
    if ($a eq "" && $b eq "") {
        return 0;
    }
    if ($a eq "" && $b ne "") {
        return -1;
    }
    if ($a ne "" && $b eq "") {
        return 1;
    }
    if (substr($a, 0, 1) eq substr($b, 0, 1)) {
        return zhuyinCompare(substr($a, 1), substr($b, 1));
    }
    return (index($zhuyinOrder, substr($a, 0, 1))
            - index($zhuyinOrder, substr($b,0 ,1)));
}

sub fillPinyinZhuyin {
    for my $key (sort zhuyinCompare keys(%zhuyinPinyin)) {
        if (defined $pinyinZhuyin{$zhuyinPinyin{$key}}) {
            printf STDERR "*** error: duplicate pinyin: $zhuyinPinyin{$key}\n";
            printf STDERR "$key $pinyinZhuyin{$zhuyinPinyin{$key}}\n";
            exit 1;
        }
        $pinyinZhuyin{$zhuyinPinyin{$key}} = $key;
    }
}

sub maybeGetStrokeBucket {
    my ($charList, $comment) = @_;
    if ($comment =~ /\(p.*\)/) {
        if ($comment !~ /\(p1\)/) {
            return; # ignore comments which are not for the first part
        }
    }
    if ($currentCollType eq "stroke") {
        push (@strokeBuckets, $comment . substr($charList, 0, 1));
    }
    if ($currentCollType eq "strokeshort") {
        push (@strokeShortBuckets, $comment . substr($charList, 0, 1));
    }
}

sub addZhuyinPcList {
    my ($charList, $comment) = @_;
    my $pinyin;
    ($pinyin = $comment) =~ s/[[:space:]]*\(.*\)//;
    if($pinyin eq "") {
        print STDERR "*** error pinyin emtpy\n";
        print STDERR "comment=$comment\n";
        exit 1;
    }
    my $zhuyin = $pinyinZhuyin{$pinyin};
    if (!defined($zhuyin)) {
        print STDERR "*** error no zhuyin for pinyin=$pinyin found\n";
        exit 1;
    }
    if (defined($zhuyinPcLists{$zhuyin})) {
        $zhuyinPcLists{$pinyinZhuyin{$pinyin}} .= $charList;
    }
    else {
        $zhuyinPcLists{$pinyinZhuyin{$pinyin}} = $charList;
    }
}

sub insertPinyin {
    my ($char, $comment) = @_;
    if ($comment =~ /([^[:space:]]+)[[:space:]]*(\(p.*\))?/) {
        # remove " (p.*)" from comment
        $comment = $1;
    }
    # comments without accents are not used at the moment ...
    my $commentWithoutAccents = NFD($comment);
    $commentWithoutAccents =~ s/\pM//og;
    my $insert = "<$char";
    if($OPT_VERBOSITY >= 1) {
        print "insertPinyin: $char $comment ($commentWithoutAccents) $insert\n";
    }
    $collTypeCollationOutput{"pinyin"} .= "$insert";
}

sub insertPinyinSearch {
    my ($char, $comment) = @_;
    if ($comment =~ /([^[:space:]]+)[[:space:]]*(\(p.*\))?/) {
        # remove " (p.*)" from comment
        $comment = $1;
    }
    # comments without accents are not used at the moment ...
    my $commentWithoutAccents = NFD($comment);
    $commentWithoutAccents =~ s/\pM//og;
    $pinyinSearchCount++;
    my $countString = sprintf("%05d", $pinyinSearchCount);
    # $countString =~ s/0/ /og; # U+2000 EN QUAD
    # $countString =~ s/1/ /og; # U+2001 EM QUAD
    # $countString =~ s/2/ /og; # U+2002 EN SPACE
    # $countString =~ s/3/ /og; # U+2003 EM SPACE
    # $countString =~ s/4/ /og; # U+2004 THREE-PER-EM SPACE
    # $countString =~ s/5/ /og; # U+2005 FOUR-PER-EM SPACE
    # $countString =~ s/6/ /og; # U+2006 SIX-PER-EM SPACE
    # $countString =~ s/7/ /og; # U+2007 FIGURE SPACE
    # $countString =~ s/8/ /og; # U+2008 PUNCTUATION SPACE
    # $countString =~ s/9/ /og; # U+2009 THIN SPACE
    $countString = "";
    my $firstLetter = substr($comment, 0, 1);
    my $remainingLetters = substr($comment, 1, length($comment)-1);
    my $insert = "<<$char";
    if ($remainingLetters ne "") {
        $insert .= "/${remainingLetters}${countString}";
    }
    elsif ($countString ne "") {
        $insert .= "/${countString}";
    }
    if($OPT_VERBOSITY >= 1) {
        print "insertPinyinSearch: $char $comment ($commentWithoutAccents) $insert\n";
    }
    $collTypeCollationOutput{"pinyinsearch"} .= "$insert";
}

sub maybeInsertPinyinAnchor {
    my ($comment, $charList) = @_;
    if ($comment =~ /\(p.*\)/) {
        if ($comment !~ /\(p1\)/) {
            return; # ignore comments which are not for the first part
        }
    }
    if ($comment =~ /([^[:space:]]+)[[:space:]]*(\(p1\))?/) {
        # remove " (p1)" from comment
        $comment = $1;
    }
    my $commentWithoutAccents = NFD($comment);
    $commentWithoutAccents =~ s/\pM//og;
    my $anchorChar = $fullWidthChars{uc(substr($commentWithoutAccents, 0, 1))};
    if ($anchorChar ne "" && !defined $pinyinAnchorsInserted{$anchorChar}) {
        $pinyinAnchorsInserted{$anchorChar} = substr($charList, 0, 1);
        $collTypeCollationOutput{"pinyin"} .= "&${anchorChar}";
    }
}

sub maybeInsertPinyinSearchAnchor {
    my ($comment) = @_;
    if ($comment =~ /\(p.*\)/) {
        if ($comment !~ /\(p1\)/) {
            return; # ignore comments which are not for the first part
        }
    }
    if ($comment =~ /([^[:space:]]+)[[:space:]]*(\(p1\))?/) {
        # remove " (p1)" from comment
        $comment = $1;
    }
    my $commentWithoutAccents = NFD($comment);
    $commentWithoutAccents =~ s/\pM//og;
    my $firstChar = substr($commentWithoutAccents, 0, 1);
    if ($firstChar ne "" && !defined $pinyinSearchAnchorsInserted{$firstChar}) {
        $pinyinSearchAnchorsInserted{$firstChar} = $firstChar;
        $collTypeCollationOutput{"pinyinsearch"} .= "&${firstChar}";
    }
}

sub maybeInsertUnihanAnchor {
    my ($comment) = @_;
    # some characters have two kRSUnicode values: <pc>欽</pc><!-- 76.8 167.4 -->
    if ($comment =~ /([0-9]{1,3})(')?\.([0-9]{1,2})([[:space:]]+[0-9.]+)?/) {
        my $radicalNumber = $1;
        # an apostrophe (') after the radical indicates a simplified
        # version of the given radical:
        my $simplified = $2;
        my $residualStrokeCount = $3;
        if ($residualStrokeCount == 0 && !defined($simplified)) {
            $collTypeCollationOutput{"unihan"} .=
                "&" . substr($radicalList, $radicalNumber - 1, 1);
        }
    }
}

sub isIgnoredCollType {
    my ($collType) = @_;
    return (grep (/^${collType}$/, @ignoredCollTypes));
}

######################################################################
# main:

# Process command line options
my %opt;
unless (GetOptions(\%opt,
		   'verbosity|v=i',      \$OPT_VERBOSITY,
		   'version',            \$OPT_VERSION,
		   'help|h',             \$OPT_HELP,
                   'input|i',            \$OPT_INPUT_FILE,
                   'output|o',           \$OPT_OUTPUT_FILE,
        )) {
    &usage ();
    exit 1;
}

if (!defined $OPT_VERBOSITY) {
    $OPT_VERBOSITY = 1;
}
if (!defined $OPT_VERSION) {
    $OPT_VERSION = 0;
}
if (!defined $OPT_HELP) {
    $OPT_HELP = 0;
}
if (!defined $OPT_INPUT_FILE) {
    $OPT_INPUT_FILE = "./zh.xml";
}
if (!defined $OPT_OUTPUT_FILE) {
    $OPT_OUTPUT_FILE = "./zh.txt";
}
if ($OPT_VERBOSITY >=1) {
    select (STDOUT);
    $OUTPUT_AUTOFLUSH = 1;
    select (STDERR);
    $OUTPUT_AUTOFLUSH = 1;
}
if ($OPT_VERSION) {
    print "messageid-check $version\n";
    exit 0;
}
if ($OPT_HELP) {
    &usage ();
    exit 0;
}

fillPinyinZhuyin();
# debug pinyin zhuyin table:
#for my $key (sort keys(%pinyinZhuyin)) {
#    print "$key $pinyinZhuyin{$key}\n";
#}

# debug zhuyin pinyin table:
#for my $key (sort zhuyinCompare keys(%zhuyinPinyin)) {
#    print "$key $zhuyinPinyin{$key}\n";
#}

open (CLDR, "<:encoding(UTF-8)", "$OPT_INPUT_FILE") || die "Can’t open file $OPT_INPUT_FILE: $!";

while (<CLDR>) {
    if ($ARG =~ /<language type=["'](.+)["'] \/>/) {
        $libicuCollationOutput .= "$1\{\n";
        next;
    }
    if ($ARG =~ /<collations validSubLocales=["'].*["']>/) {
        $libicuCollationOutput .= "collations{\n";
        next;
    }
    if ($ARG =~ /<\/collations>/) {
        # don’t close the collations block here
        # just ignore it here, we want to insert more stuff later
        # before the close of the collations block
        next;
    }
    if ($ARG =~ /<default type=["'](.+)["'] \/>/) {
        $libicuCollationOutput .= "default { \"$1\" }\n";
        next;
    }
    if ($ARG =~ /<collation type=["'](.+)["']>/) {
        my $collType = $1;
        if ($collType eq  "pinyin' alt='short") {
            $collType = "pinyinshort";
        }
        if ($collType eq  "stroke' alt='short") {
            $collType = "strokeshort";
        }
        $currentCollType = $collType;
        if (isIgnoredCollType($currentCollType)) {
            if ($OPT_VERBOSITY >= 1) {
                printf (STDOUT "ignoring collation $currentCollType...\n");
            }
            next;
        }
        else {
            if ($OPT_VERBOSITY >= 1) {
                printf (STDOUT "start of parsing collation $currentCollType...\n");
            }
            $collTypeCollationOutput{$currentCollType} .= "$currentCollType\{\n";
            if($currentCollType eq "pinyin") {
                %pinyinAnchorsInserted = ();
                %pinyinSearchAnchorsInserted = ();
                $pinyinSearchCount = 0;
                $collTypeCollationOutput{"pinyinsearch"} .= "pinyinsearch\{\n";
            }
            next;
        }
    }
    if ($ARG =~ /<\/collation>/) {
        if (isIgnoredCollType($currentCollType)) {
            if ($OPT_VERBOSITY >= 1) {
                printf (STDOUT "end of ignored collation $currentCollType.\n");
            }
            next;
        }
        else {
            if ($OPT_VERBOSITY >= 1) {
                printf (STDOUT "end of collation $currentCollType.\n");
            }
            $collTypeCollationOutput{$currentCollType} .= "}\n";
            if($currentCollType eq "pinyin") {
                $collTypeCollationOutput{"pinyinsearch"} .= "}\n";
            }
            next;
        }
    }
    if (isIgnoredCollType($currentCollType)) {
        next;
    }
    if ($ARG =~ /<rules>/) {
        $collTypeCollationOutput{$currentCollType} .= "Sequence { \"";
        if($currentCollType eq "pinyin") {
            $collTypeCollationOutput{"pinyinsearch"} .= "Sequence { \"";
        }
        if ($currentCollType eq "pinyin") {
            # Ignore variable code points on the primary level,
            # i.e. ignore spaces when sorting pinyin:
            $collTypeCollationOutput{"pinyin"} .= "[alternate shifted]";
            $collTypeCollationOutput{"pinyinsearch"} .= "[alternate shifted]";
        }
        next;
    }
    if ($ARG =~ /<\/rules>/) {
        if($currentCollType eq "stroke") {
            $collTypeCollationOutput{$currentCollType} .= "&[before 1]劃<1劃<2劃<3劃<4劃<5劃<6劃<7劃<8劃<9劃<10劃<11劃<12劃<13劃<14劃<15劃<16劃<17劃<18劃<19劃<20劃<21劃<22劃<23劃<24劃<25劃<26劃<27劃<28劃<29劃<30劃<31劃<32劃<33劃<34劃<35劃<36劃<37劃<38劃<39劃<40劃<41劃<42劃<43劃<44劃<45劃<46劃<47劃<48劃<49劃<50劃<51劃<52劃<53劃<54劃<55劃<56劃<57劃<58劃<59劃<60劃<61劃<62劃<63劃<64劃";
        }
        $collTypeCollationOutput{$currentCollType} .= "\" }\n";
        if($currentCollType eq "pinyin") {
            $collTypeCollationOutput{"pinyinsearch"} .= "\" }\n";
        }
        next;
    }
    if ($ARG =~ /<reset before=["']secondary["']>(.+)<\/reset>/) {
        $collTypeCollationOutput{$currentCollType} .= "&[before 2]$1";
        if($currentCollType eq "pinyin") {
            $collTypeCollationOutput{"pinyinsearch"} .= "&[before 2]$1";
        }
        next;
    }
    if ($ARG =~ /<reset><last_non_ignorable \/><\/reset>/) {
        if ($currentCollType eq "stroke") {
            # If stroke count sorting is used, put Chinese before “a”:
            $collTypeCollationOutput{"stroke"} .= "&[before 1]a";
            for my $zhuyinCharacter (sort zhuyinCompare (@zhuyinCharacters)) {
                $collTypeCollationOutput{"stroke"} .= "<${zhuyinCharacter}";
            }
        }
        elsif ($currentCollType eq "unihan") {
            $collTypeCollationOutput{"unihan"} .= "&[last regular]";
            for (my $i = 0; $i < length($radicalList); ++$i) {
                my $char = substr($radicalList, $i, 1);
                $collTypeCollationOutput{"unihan"} .= "<$char";
            }
        }
        elsif ($currentCollType eq "pinyin") {
            $collTypeCollationOutput{"pinyinsearch"} .= "&[last regular]";
            $collTypeCollationOutput{"pinyin"} .= "&[before 1]a";
            my $latinCharList = "abcdefghijklmnopqrstuvwxyz";
            for (my $i = 0; $i < length($latinCharList); ++$i) {
                my $lcChar = $fullWidthChars{lc(substr($latinCharList, $i, 1))};
                my $ucChar = $fullWidthChars{uc(substr($latinCharList, $i, 1))};
                $collTypeCollationOutput{"pinyin"} .= "<$lcChar<<<$ucChar";
            }
        }
        else {
            $collTypeCollationOutput{$currentCollType} .= "&[last regular]";
        }
        next;
    }
    if ($ARG =~ /<reset>(.+)<\/reset>/) {
        my $val = $1;
        $val =~ s/\(/'\('/;
        $val =~ s/\)/'\)'/;
        $collTypeCollationOutput{$currentCollType} .= "&$val";
        if($currentCollType eq "pinyin") {
            $collTypeCollationOutput{"pinyinsearch"} .= "&$val";
        }
        next;
    }
    if ($ARG =~ /<s>(.+)<\/s>/) {
        $collTypeCollationOutput{$currentCollType} .= "<<$1";
        if($currentCollType eq "pinyin") {
            $collTypeCollationOutput{"pinyinsearch"} .= "<<$1";
        }
        next;
    }
    if ($ARG =~ /<t>(.+)<\/t>/) {
        $collTypeCollationOutput{$currentCollType} .= "<<<$1";
        if($currentCollType eq "pinyin") {
            $collTypeCollationOutput{"pinyinsearch"} .= "<<<$1";
        }
        next;
    }
    if ($ARG =~ /<pc>(.+)<\/pc>[[:space:]]*$/) {
        if ($currentCollType eq "pinyin"
            || $currentCollType eq "pinyinshort"
            || $currentCollType eq "stroke"
            || $currentCollType eq "strokeshort") {
            printf STDERR "*** <pc>...</pc> list found without pinyin or stroke count\n";
            printf STDERR "This should never happen for collation types pinyin or stroke\n";
            exit 1;
        }
        my $charList = $1;
        for (my $i = 0; $i < length($charList); ++$i) {
            my $char = substr($charList, $i, 1);
            $collTypeCollationOutput{$currentCollType} .= "<$char";
        }
        next;
    }
    if ($ARG =~ /<pc>(.+)<\/pc><!--[[:space:]]+(.+)[[:space:]]+-->$/) {
        my $charList = $1;
        my $comment = $2;
        if ($currentCollType eq "pinyin" || $currentCollType eq "pinyinshort") {
            addZhuyinPcList($charList, $comment);
            maybeInsertPinyinAnchor($comment, $charList);
            maybeInsertPinyinSearchAnchor($comment);
        }
        if ($currentCollType eq "stroke" || $currentCollType eq "strokeshort") {
            maybeGetStrokeBucket($charList, $comment);
        }
        if ($currentCollType eq "unihan") {
            maybeInsertUnihanAnchor($comment);
        }
        for (my $i = 0; $i < length($charList); ++$i) {
            my $char = substr($charList, $i, 1);
            if ($currentCollType eq "pinyin" || $currentCollType eq "pinyinshort") {
                insertPinyin($char, $comment);
                insertPinyinSearch($char, $comment);
            }
            else {
                $collTypeCollationOutput{$currentCollType} .= "<$char";
            }
        }
        next;
    }
    if ($ARG =~ /<version number=["'](.+)["'] \/>/) {
        next; # ignore
    }
    if ($ARG =~ /<generation date=["'](.+)["'] \/>/) {
        next; # ignore
    }
    if ($ARG =~ /<ldml>/) {
        next; # ignore
    }
    if ($ARG =~ /<\/ldml>/) {
        next; # ignore
    }
    if ($ARG =~ /<identity>/) {
        next; # ignore
    }
    if ($ARG =~ /<\/identity>/) {
        next; # ignore
    }
    if ($ARG =~ /<!DOCTYPE ldml SYSTEM .*>/) {
        next; # ignore
    }
    if ($ARG =~ /<\?xml version="1.0" .*>/) {
        next; # ignore
    }
    print STDERR "***warning: unhandled line $ARG\n";
}

# add zhuyin table:
$collTypeCollationOutput{"zhuyin"} .= "zhuyin{\n";
$collTypeCollationOutput{"zhuyin"} .= "Sequence { \"";
$collTypeCollationOutput{"zhuyin"} .= "&[before 2]a<<ā<<<Ā<<á<<<Á<<ǎ<<<Ǎ<<à<<<À";
$collTypeCollationOutput{"zhuyin"} .= "&[before 2]e<<ē<<<Ē<<é<<<É<<ě<<<Ě<<è<<<È";
$collTypeCollationOutput{"zhuyin"} .= "&e<<ê̄<<<Ê̄<<ế<<<Ế<<ê̌<<<Ê̌<<ề<<<Ề\n";
$collTypeCollationOutput{"zhuyin"} .= "&[before 2]i<<ī<<<Ī<<í<<<Í<<ǐ<<<Ǐ<<ì<<<Ì";
$collTypeCollationOutput{"zhuyin"} .= "&[before 2]m<<m̄<<<M̄<<ḿ<<<Ḿ<<m̌<<<M̌<<m̀<<<M̀";
$collTypeCollationOutput{"zhuyin"} .= "&[before 2]n<<n̄<<<N̄<<ń<<<Ń<<ň<<<Ň<<ǹ<<<Ǹ";
$collTypeCollationOutput{"zhuyin"} .= "&[before 2]o<<ō<<<Ō<<ó<<<Ó<<ǒ<<<Ǒ<<ò<<<Ò";
$collTypeCollationOutput{"zhuyin"} .= "&[before 2]u<<ū<<<Ū<<ú<<<Ú<<ǔ<<<Ǔ<<ù<<<Ù";
$collTypeCollationOutput{"zhuyin"} .= "&U<<ǖ<<<Ǖ<<ǘ<<<Ǘ<<ǚ<<<Ǚ<<ǜ<<<Ǜ<<ü<<<Ü";
$collTypeCollationOutput{"zhuyin"} .= "&[before 1]a";
for my $zhuyinCharacter (sort zhuyinCompare (@zhuyinCharacters)) {
    $collTypeCollationOutput{"zhuyin"} .= "<${zhuyinCharacter}";
}
my $zhuyinIndexBucket = "";
for my $key (sort zhuyinCompare keys(%zhuyinPcLists)) {
    for (my $i = 0; $i < length($zhuyinPcLists{$key}); ++$i) {
        my $char = substr($zhuyinPcLists{$key}, $i, 1);
        my $currentZhuyinIndexBucket = substr($key, 0, 1);
        if ($OPT_VERBOSITY >= 2) {
            print STDOUT "$key $zhuyinPinyin{$key} $char\n";
        }
        if ($currentZhuyinIndexBucket ne $zhuyinIndexBucket) {
            $zhuyinIndexBucket = $currentZhuyinIndexBucket;
            $collTypeCollationOutput{"zhuyin"} .= "&${currentZhuyinIndexBucket}";
        }
        $collTypeCollationOutput{"zhuyin"} .= "<$char";
    }
}
$collTypeCollationOutput{"zhuyin"} .= "\" }\n"; # Sequence { }
$collTypeCollationOutput{"zhuyin"} .= "}\n"; # zhuyin { }

# add the collations to the output:
$libicuCollationOutput .= $collTypeCollationOutput{"standard"};
$libicuCollationOutput .= $collTypeCollationOutput{"pinyin"};
$libicuCollationOutput .= $collTypeCollationOutput{"pinyinsearch"};
$libicuCollationOutput .= $collTypeCollationOutput{"gb2312han"};
$libicuCollationOutput .= $collTypeCollationOutput{"stroke"};
$libicuCollationOutput .= $collTypeCollationOutput{"big5han"};
$libicuCollationOutput .= $collTypeCollationOutput{"unihan"};
$libicuCollationOutput .= $collTypeCollationOutput{"zhuyin"};

# close the <collations>...</collations> block:
$libicuCollationOutput .= "}\n";
# close the <language type="zh" />:
$libicuCollationOutput .= "}\n";

open (LIBICU, ">$OPT_OUTPUT_FILE") || die "Can’t open file $OPT_OUTPUT_FILE: $!";
binmode LIBICU, ":utf8";
printf LIBICU "%s", $libicuCollationOutput;
close (LIBICU);

printf STDOUT "//pinyin anchors inserted:\n";
for my $key (sort keys(%pinyinAnchorsInserted)) {
    printf STDOUT "// anchor: $key first char after anchor: $pinyinAnchorsInserted{$key}\n";
}

printf STDOUT "// strokeBuckets      = @strokeBuckets\n";
printf STDOUT "//\n";

for (my $i = 1; $i <= $#strokeBuckets +1; ++$i) {
    printf STDOUT "// $i: $strokeBuckets[$i-1]\n";
}

